import _extends from "@babel/runtime/helpers/extends";
import React, { forwardRef } from 'react';
import useStyles, { inline } from 'substyle';
import { getModifiers } from './utils';

function StickNode(_ref, ref) {
  var children = _ref.children,
      width = _ref.width,
      align = _ref.align,
      position = _ref.position,
      sameWidth = _ref.sameWidth;
  var styles = useStyles(defaultStyle, {}, getModifiers({
    align: align,
    position: position,
    sameWidth: sameWidth
  }));
  return /*#__PURE__*/React.createElement("div", inline(styles, {
    width: width
  }), /*#__PURE__*/React.createElement("div", _extends({}, styles('content'), {
    ref: ref
  }), children));
}

var defaultStyle = {
  position: 'absolute',
  right: 0,
  bottom: 0,
  content: {
    // absolute position is needed as the stick node would otherwise
    // cover up the base node and, for instance, make it impossible to
    // click buttons
    position: 'absolute',
    display: 'inline-block',
    left: 'inherit',
    right: 'inherit',
    top: 'inherit',
    bottom: 'inherit'
  },
  '&sameWidth': {
    content: {
      display: 'block',
      width: '100%'
    }
  },
  '&align-left': {
    right: 'auto',
    left: 0
  },
  '&align-top': {
    bottom: 'auto',
    top: 0
  },
  '&align-middle': {
    content: {
      transform: 'translate(0, 50%)'
    }
  },
  '&align-center': {
    content: {
      transform: 'translate(50%, 0)'
    },
    '&align-middle': {
      content: {
        transform: 'translate(50%, 50%)'
      }
    }
  }
};
export default /*#__PURE__*/forwardRef(StickNode);