import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import React from 'react';
import useStyles from 'substyle';
import { getModifiers } from './utils';

function StickInline(_ref) {
  var node = _ref.node,
      children = _ref.children,
      component = _ref.component,
      containerRef = _ref.containerRef,
      nestingKey = _ref.nestingKey,
      align = _ref.align,
      position = _ref.position,
      style = _ref.style,
      rest = _objectWithoutPropertiesLoose(_ref, ["node", "children", "component", "containerRef", "nestingKey", "align", "position", "style"]);

  var styles = useStyles(defaultStyle, {
    style: style
  }, getModifiers({
    align: align,
    position: position
  }));
  var Component = component || 'div';
  return /*#__PURE__*/React.createElement(Component, _extends({}, rest, styles, {
    ref: containerRef,
    "data-sticknestingkey": nestingKey
  }), children, node && /*#__PURE__*/React.createElement("div", styles('node'), node));
}

var defaultStyle = {
  position: 'relative',
  node: {
    position: 'absolute',
    zIndex: 99,
    textAlign: 'left'
  },
  '&position-top': {
    node: {
      top: 0
    }
  },
  '&position-middle': {
    node: {
      top: '50%'
    }
  },
  '&position-bottom': {
    node: {
      top: '100%'
    }
  },
  '&position-left': {
    node: {
      left: 0
    }
  },
  '&position-center': {
    node: {
      left: '50%'
    }
  },
  '&position-right': {
    node: {
      left: '100%'
    }
  }
};
export default StickInline;