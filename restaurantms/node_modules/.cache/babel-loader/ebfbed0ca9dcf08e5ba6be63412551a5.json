{"ast":null,"code":"var _jsxFileName = \"/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Customer/DCustomer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { SearchKeys, CusTypes, custColNames, custDB2N } from '../db';\nimport axios from 'axios';\nimport Search from '../Search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DCustomer = () => {\n  _s();\n\n  const [rows, setRows] = useState([]);\n  const [showDisplay, setShowDisplay] = useState(false);\n  const [gotData, setGotData] = useState([]);\n  const [delInfo, setDelInfo] = useState({\n    key: 'First Name',\n    value: '',\n    delKeyType: 'text',\n    column: 'fname',\n    sql: '',\n    api: \"'/api/show_data/'\"\n  });\n\n  const delTypeChange = value => {\n    setDelInfo({ ...delInfo,\n      key: value,\n      delKeyType: CusTypes[value + \" type\"],\n      column: custColNames[value]\n    });\n  };\n\n  const showMayBeDelItems = e => {\n    e.preventDefault();\n    console.log('Successfully Got the requested Data to delete');\n    axios.post('/api/show_data/', delInfo).then(res => {\n      setGotData(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n    setShowDisplay(true);\n  };\n\n  const delValueChange = value => {\n    setDelInfo({ ...delInfo,\n      value: value,\n      sql: 'SELECT * FROM CUSTOMERS WHERE ' + delInfo.column + \" = '\" + value + \"'\"\n    });\n    setShowDisplay(false);\n  };\n\n  const options = Object.keys(SearchKeys).map(i => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: i,\n      children: i\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Here you can delete CUSTOMERS Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      table: 'CUSTOMERS'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DCustomer, \"7ScI5+1NA9B0F4RKF7L3+ITmGcs=\");\n\n_c = DCustomer;\nexport default DCustomer;\n\nvar _c;\n\n$RefreshReg$(_c, \"DCustomer\");","map":{"version":3,"sources":["/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Customer/DCustomer.js"],"names":["React","useState","SearchKeys","CusTypes","custColNames","custDB2N","axios","Search","DCustomer","rows","setRows","showDisplay","setShowDisplay","gotData","setGotData","delInfo","setDelInfo","key","value","delKeyType","column","sql","api","delTypeChange","showMayBeDelItems","e","preventDefault","console","log","post","then","res","data","catch","err","delValueChange","options","Object","keys","map","i"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,EAAqBC,QAArB,EAA+BC,YAA/B,EAA6CC,QAA7C,QAA6D,OAA7D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;;AAGA,MAAMC,SAAS,GAAE,MAAI;AAAA;;AAEjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC;AACnCgB,IAAAA,GAAG,EAAE,YAD8B;AAEnCC,IAAAA,KAAK,EAAE,EAF4B;AAGnCC,IAAAA,UAAU,EAAE,MAHuB;AAInCC,IAAAA,MAAM,EAAE,OAJ2B;AAKnCC,IAAAA,GAAG,EAAE,EAL8B;AAMnCC,IAAAA,GAAG,EAAE;AAN8B,GAAD,CAAtC;;AAUA,QAAMC,aAAa,GAAGL,KAAD,IAAS;AAC1BF,IAAAA,UAAU,CAAC,EACP,GAAGD,OADI;AAEPE,MAAAA,GAAG,EAACC,KAFG;AAGPC,MAAAA,UAAU,EAAEhB,QAAQ,CAACe,KAAK,GAAG,OAAT,CAHb;AAIPE,MAAAA,MAAM,EAAEhB,YAAY,CAACc,KAAD;AAJb,KAAD,CAAV;AAMH,GAPD;;AAQA,QAAMM,iBAAiB,GAAEC,CAAD,IAAK;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,+CAAZ;AACAtB,IAAAA,KAAK,CAACuB,IAAN,CAAW,iBAAX,EAA8Bd,OAA9B,EAAuCe,IAAvC,CAA4CC,GAAG,IAAE;AACzCjB,MAAAA,UAAU,CAACiB,GAAG,CAACC,IAAL,CAAV;AACH,KAFL,EAEOC,KAFP,CAEaC,GAAG,IAAE;AACVP,MAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACH,KAJL;AAKAtB,IAAAA,cAAc,CAAC,IAAD,CAAd;AAEH,GAVD;;AAWA,QAAMuB,cAAc,GAAGjB,KAAD,IAAS;AAC3BF,IAAAA,UAAU,CAAC,EACP,GAAGD,OADI;AAEPG,MAAAA,KAAK,EAACA,KAFC;AAGPG,MAAAA,GAAG,EAAE,mCAAmCN,OAAO,CAACK,MAA3C,GAAoD,MAApD,GAA6DF,KAA7D,GAAoE;AAHlE,KAAD,CAAV;AAKAN,IAAAA,cAAc,CAAC,KAAD,CAAd;AACH,GAPD;;AASA,QAAMwB,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAYpC,UAAZ,EAAwBqC,GAAxB,CACXC,CAAD,IAAK;AACD,wBACI;AAAQ,MAAA,KAAK,EAAEA,CAAf;AAAA,gBAAmBA;AAAnB;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,GALW,CAAhB;AAQA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA,YADJ,eAEQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFR,eAGI;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAAf;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CA3DD;;GAAMhC,S;;KAAAA,S;AA6DN,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react'\nimport { SearchKeys, CusTypes, custColNames, custDB2N } from '../db'\nimport axios from 'axios'\nimport Search from '../Search'\n\n\nconst DCustomer =()=>{\n\n    const [rows, setRows] = useState([])\n    const [showDisplay, setShowDisplay] = useState(false)\n    const [gotData, setGotData] = useState([])\n    const [delInfo, setDelInfo] = useState({\n        key: 'First Name',\n        value: '',\n        delKeyType: 'text',\n        column: 'fname',\n        sql: '',\n        api: \"'/api/show_data/'\"\n    })\n\n\n    const delTypeChange =(value)=>{\n        setDelInfo({\n            ...delInfo,  \n            key:value,\n            delKeyType: CusTypes[value + \" type\"],\n            column: custColNames[value]\n        });\n    }\n    const showMayBeDelItems=(e)=>{\n        e.preventDefault()\n        console.log('Successfully Got the requested Data to delete')\n        axios.post('/api/show_data/', delInfo).then(res=>{\n                setGotData(res.data)\n            }).catch(err=>{\n                console.log(err)\n            })\n        setShowDisplay(true)\n\n    }\n    const delValueChange =(value)=>{\n        setDelInfo({\n            ...delInfo, \n            value:value,\n            sql: 'SELECT * FROM CUSTOMERS WHERE ' + delInfo.column + \" = '\" + value +\"'\" \n        });\n        setShowDisplay(false)\n    }\n\n    const options = Object.keys(SearchKeys).map(\n        (i)=>{\n            return(\n                <option value={i}>{i}</option>\n            )\n        }\n    )\n\n    return(\n        <div>\n            <hr />\n                <h1>Here you can delete CUSTOMERS Information</h1>\n            <hr />\n            <Search table={'CUSTOMERS'}></Search>\n        </div>\n    )\n}\n\nexport default DCustomer;"]},"metadata":{},"sourceType":"module"}