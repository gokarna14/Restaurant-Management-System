{"ast":null,"code":"import invariant from 'invariant';\nimport { useCallback, useState, useEffect } from 'react';\nimport { positions } from '../defaultPosition';\nimport { fitsOnBottom, fitsOnLeft, fitsOnRight, fitsOnTop, getDefaultAlign, isPositionedToBottom, isPositionedToLeft, isPositionedToRight, isPositionedToTop } from '../utils';\n\nvar useAutoFlip = function useAutoFlip(enableAutoHorizontalFlip, enableAutoVerticalFlip, initialPosition, initialAlign) {\n  var _useState = useState(initialPosition),\n      currentPosition = _useState[0],\n      setCurrentPosition = _useState[1];\n\n  var _useState2 = useState(initialAlign || getDefaultAlign(initialPosition)),\n      currentAlign = _useState2[0],\n      setCurrentAlign = _useState2[1];\n\n  useEffect(function () {\n    setCurrentPosition(initialPosition);\n    setCurrentAlign(initialAlign || getDefaultAlign(initialPosition));\n  }, [initialAlign, initialPosition]);\n  var checkAlignment = useCallback(function (nodeRef, anchorRef) {\n    var _autoFlipHorizontally = autoFlipHorizontally(nodeRef, anchorRef, {\n      enabled: enableAutoHorizontalFlip,\n      initialPosition: initialPosition,\n      initialAlign: initialAlign,\n      currentPosition: currentPosition,\n      currentAlign: currentAlign\n    }),\n        horizontalPosition = _autoFlipHorizontally[0],\n        horizontalAlign = _autoFlipHorizontally[1];\n\n    var _autoFlipVertically = autoFlipVertically(nodeRef, anchorRef, {\n      enabled: enableAutoVerticalFlip,\n      initialPosition: initialPosition,\n      initialAlign: initialAlign,\n      currentPosition: horizontalPosition,\n      currentAlign: horizontalAlign\n    }),\n        verticalPosition = _autoFlipVertically[0],\n        verticalAlign = _autoFlipVertically[1];\n\n    if (verticalPosition !== currentPosition) {\n      setCurrentPosition(verticalPosition);\n    }\n\n    if (verticalAlign !== currentAlign) {\n      setCurrentAlign(verticalAlign);\n    }\n  }, [currentAlign, currentPosition, enableAutoHorizontalFlip, enableAutoVerticalFlip, initialAlign, initialPosition]);\n  return [currentPosition, currentAlign, checkAlignment];\n};\n\nexport default useAutoFlip;\n\nvar autoFlipVertically = function autoFlipVertically(nodeRef, anchorRef, _ref) {\n  var enabled = _ref.enabled,\n      initialPosition = _ref.initialPosition,\n      currentPosition = _ref.currentPosition,\n      initialAlign = _ref.initialAlign,\n      currentAlign = _ref.currentAlign;\n\n  if (!enabled) {\n    return [currentPosition, currentAlign];\n  }\n\n  var positionedToBottom = isPositionedToBottom(currentPosition);\n  var positionedToTop = isPositionedToTop(currentPosition);\n\n  if (isPositionedToBottom(initialPosition)) {\n    if (fitsOnBottom(nodeRef, anchorRef)) {\n      if (!positionedToBottom) {\n        return [switchToBottom(currentPosition), switchToTop(currentAlign)];\n      }\n    } else if (fitsOnTop(nodeRef, anchorRef) && !positionedToTop) {\n      return [switchToTop(currentPosition), switchToBottom(currentAlign)];\n    }\n  }\n\n  if (isPositionedToTop(initialPosition)) {\n    if (fitsOnTop(nodeRef, anchorRef)) {\n      if (!positionedToTop) {\n        return [switchToTop(currentPosition), switchToBottom(currentAlign)];\n      }\n    } else if (fitsOnBottom(nodeRef, anchorRef) && !positionedToBottom) {\n      return [switchToBottom(currentPosition), switchToTop(currentAlign)];\n    }\n  }\n\n  return [currentPosition, currentAlign];\n};\n\nvar autoFlipHorizontally = function autoFlipHorizontally(nodeRef, anchorRef, _ref2) {\n  var enabled = _ref2.enabled,\n      initialPosition = _ref2.initialPosition,\n      currentPosition = _ref2.currentPosition,\n      initialAlign = _ref2.initialAlign,\n      currentAlign = _ref2.currentAlign;\n\n  if (!enabled) {\n    return [currentPosition, currentAlign];\n  }\n\n  var positionedToLeft = isPositionedToLeft(currentPosition);\n  var positionedToRight = isPositionedToRight(currentPosition);\n\n  if (isPositionedToRight(initialPosition)) {\n    if (fitsOnRight(nodeRef, anchorRef)) {\n      if (!positionedToRight) {\n        return [switchToRight(currentPosition), switchToLeft(currentAlign)];\n      }\n    } else if (fitsOnLeft(nodeRef, anchorRef) && !positionedToLeft) {\n      return [switchToLeft(currentPosition), switchToRight(currentAlign)];\n    }\n  }\n\n  if (isPositionedToLeft(initialPosition)) {\n    if (fitsOnLeft(nodeRef, anchorRef)) {\n      if (!positionedToLeft) {\n        return [switchToLeft(currentPosition), switchToRight(currentAlign)];\n      }\n    } else if (fitsOnRight(nodeRef, anchorRef) && !positionedToRight) {\n      return [switchToRight(currentPosition), switchToLeft(currentAlign)];\n    }\n  }\n\n  return [currentPosition, currentAlign];\n};\n\nvar switchVerticalPosition = function switchVerticalPosition(position, target) {\n  var newPosition = positions.find(function (standardPosition) {\n    return standardPosition === target + \" \" + position.split(' ')[1];\n  });\n  invariant(newPosition, \"Could not determine new position. Old position \\\"\" + position + \"\\\", new vertical target \\\"\" + target + \"\\\"\");\n  return newPosition;\n};\n\nvar switchHorizontalPosition = function switchHorizontalPosition(position, target) {\n  var newPosition = positions.find(function (standardPosition) {\n    return standardPosition === position.split(' ')[0] + \" \" + target;\n  });\n  invariant(newPosition, \"Could not determine new position. Old position \\\"\" + position + \"\\\", new horizontal target \\\"\" + target + \"\\\"\");\n  return newPosition;\n};\n\nvar switchToBottom = function switchToBottom(position) {\n  return switchVerticalPosition(position, 'bottom');\n};\n\nvar switchToTop = function switchToTop(position) {\n  return switchVerticalPosition(position, 'top');\n};\n\nvar switchToLeft = function switchToLeft(position) {\n  return switchHorizontalPosition(position, 'left');\n};\n\nvar switchToRight = function switchToRight(position) {\n  return switchHorizontalPosition(position, 'right');\n};","map":{"version":3,"sources":["/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/node_modules/react-stick/es/hooks/useAutoFlip.js"],"names":["invariant","useCallback","useState","useEffect","positions","fitsOnBottom","fitsOnLeft","fitsOnRight","fitsOnTop","getDefaultAlign","isPositionedToBottom","isPositionedToLeft","isPositionedToRight","isPositionedToTop","useAutoFlip","enableAutoHorizontalFlip","enableAutoVerticalFlip","initialPosition","initialAlign","_useState","currentPosition","setCurrentPosition","_useState2","currentAlign","setCurrentAlign","checkAlignment","nodeRef","anchorRef","_autoFlipHorizontally","autoFlipHorizontally","enabled","horizontalPosition","horizontalAlign","_autoFlipVertically","autoFlipVertically","verticalPosition","verticalAlign","_ref","positionedToBottom","positionedToTop","switchToBottom","switchToTop","_ref2","positionedToLeft","positionedToRight","switchToRight","switchToLeft","switchVerticalPosition","position","target","newPosition","find","standardPosition","split","switchHorizontalPosition"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,WAAtB;AACA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,SAAhC,QAAiD,OAAjD;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,YAAT,EAAuBC,UAAvB,EAAmCC,WAAnC,EAAgDC,SAAhD,EAA2DC,eAA3D,EAA4EC,oBAA5E,EAAkGC,kBAAlG,EAAsHC,mBAAtH,EAA2IC,iBAA3I,QAAoK,UAApK;;AAEA,IAAIC,WAAW,GAAG,SAASA,WAAT,CAAqBC,wBAArB,EAA+CC,sBAA/C,EAAuEC,eAAvE,EAAwFC,YAAxF,EAAsG;AACtH,MAAIC,SAAS,GAAGjB,QAAQ,CAACe,eAAD,CAAxB;AAAA,MACIG,eAAe,GAAGD,SAAS,CAAC,CAAD,CAD/B;AAAA,MAEIE,kBAAkB,GAAGF,SAAS,CAAC,CAAD,CAFlC;;AAIA,MAAIG,UAAU,GAAGpB,QAAQ,CAACgB,YAAY,IAAIT,eAAe,CAACQ,eAAD,CAAhC,CAAzB;AAAA,MACIM,YAAY,GAAGD,UAAU,CAAC,CAAD,CAD7B;AAAA,MAEIE,eAAe,GAAGF,UAAU,CAAC,CAAD,CAFhC;;AAIAnB,EAAAA,SAAS,CAAC,YAAY;AACpBkB,IAAAA,kBAAkB,CAACJ,eAAD,CAAlB;AACAO,IAAAA,eAAe,CAACN,YAAY,IAAIT,eAAe,CAACQ,eAAD,CAAhC,CAAf;AACD,GAHQ,EAGN,CAACC,YAAD,EAAeD,eAAf,CAHM,CAAT;AAIA,MAAIQ,cAAc,GAAGxB,WAAW,CAAC,UAAUyB,OAAV,EAAmBC,SAAnB,EAA8B;AAC7D,QAAIC,qBAAqB,GAAGC,oBAAoB,CAACH,OAAD,EAAUC,SAAV,EAAqB;AACnEG,MAAAA,OAAO,EAAEf,wBAD0D;AAEnEE,MAAAA,eAAe,EAAEA,eAFkD;AAGnEC,MAAAA,YAAY,EAAEA,YAHqD;AAInEE,MAAAA,eAAe,EAAEA,eAJkD;AAKnEG,MAAAA,YAAY,EAAEA;AALqD,KAArB,CAAhD;AAAA,QAOIQ,kBAAkB,GAAGH,qBAAqB,CAAC,CAAD,CAP9C;AAAA,QAQII,eAAe,GAAGJ,qBAAqB,CAAC,CAAD,CAR3C;;AAUA,QAAIK,mBAAmB,GAAGC,kBAAkB,CAACR,OAAD,EAAUC,SAAV,EAAqB;AAC/DG,MAAAA,OAAO,EAAEd,sBADsD;AAE/DC,MAAAA,eAAe,EAAEA,eAF8C;AAG/DC,MAAAA,YAAY,EAAEA,YAHiD;AAI/DE,MAAAA,eAAe,EAAEW,kBAJ8C;AAK/DR,MAAAA,YAAY,EAAES;AALiD,KAArB,CAA5C;AAAA,QAOIG,gBAAgB,GAAGF,mBAAmB,CAAC,CAAD,CAP1C;AAAA,QAQIG,aAAa,GAAGH,mBAAmB,CAAC,CAAD,CARvC;;AAUA,QAAIE,gBAAgB,KAAKf,eAAzB,EAA0C;AACxCC,MAAAA,kBAAkB,CAACc,gBAAD,CAAlB;AACD;;AAED,QAAIC,aAAa,KAAKb,YAAtB,EAAoC;AAClCC,MAAAA,eAAe,CAACY,aAAD,CAAf;AACD;AACF,GA5B+B,EA4B7B,CAACb,YAAD,EAAeH,eAAf,EAAgCL,wBAAhC,EAA0DC,sBAA1D,EAAkFE,YAAlF,EAAgGD,eAAhG,CA5B6B,CAAhC;AA6BA,SAAO,CAACG,eAAD,EAAkBG,YAAlB,EAAgCE,cAAhC,CAAP;AACD,CA3CD;;AA6CA,eAAeX,WAAf;;AAEA,IAAIoB,kBAAkB,GAAG,SAASA,kBAAT,CAA4BR,OAA5B,EAAqCC,SAArC,EAAgDU,IAAhD,EAAsD;AAC7E,MAAIP,OAAO,GAAGO,IAAI,CAACP,OAAnB;AAAA,MACIb,eAAe,GAAGoB,IAAI,CAACpB,eAD3B;AAAA,MAEIG,eAAe,GAAGiB,IAAI,CAACjB,eAF3B;AAAA,MAGIF,YAAY,GAAGmB,IAAI,CAACnB,YAHxB;AAAA,MAIIK,YAAY,GAAGc,IAAI,CAACd,YAJxB;;AAMA,MAAI,CAACO,OAAL,EAAc;AACZ,WAAO,CAACV,eAAD,EAAkBG,YAAlB,CAAP;AACD;;AAED,MAAIe,kBAAkB,GAAG5B,oBAAoB,CAACU,eAAD,CAA7C;AACA,MAAImB,eAAe,GAAG1B,iBAAiB,CAACO,eAAD,CAAvC;;AAEA,MAAIV,oBAAoB,CAACO,eAAD,CAAxB,EAA2C;AACzC,QAAIZ,YAAY,CAACqB,OAAD,EAAUC,SAAV,CAAhB,EAAsC;AACpC,UAAI,CAACW,kBAAL,EAAyB;AACvB,eAAO,CAACE,cAAc,CAACpB,eAAD,CAAf,EAAkCqB,WAAW,CAAClB,YAAD,CAA7C,CAAP;AACD;AACF,KAJD,MAIO,IAAIf,SAAS,CAACkB,OAAD,EAAUC,SAAV,CAAT,IAAiC,CAACY,eAAtC,EAAuD;AAC5D,aAAO,CAACE,WAAW,CAACrB,eAAD,CAAZ,EAA+BoB,cAAc,CAACjB,YAAD,CAA7C,CAAP;AACD;AACF;;AAED,MAAIV,iBAAiB,CAACI,eAAD,CAArB,EAAwC;AACtC,QAAIT,SAAS,CAACkB,OAAD,EAAUC,SAAV,CAAb,EAAmC;AACjC,UAAI,CAACY,eAAL,EAAsB;AACpB,eAAO,CAACE,WAAW,CAACrB,eAAD,CAAZ,EAA+BoB,cAAc,CAACjB,YAAD,CAA7C,CAAP;AACD;AACF,KAJD,MAIO,IAAIlB,YAAY,CAACqB,OAAD,EAAUC,SAAV,CAAZ,IAAoC,CAACW,kBAAzC,EAA6D;AAClE,aAAO,CAACE,cAAc,CAACpB,eAAD,CAAf,EAAkCqB,WAAW,CAAClB,YAAD,CAA7C,CAAP;AACD;AACF;;AAED,SAAO,CAACH,eAAD,EAAkBG,YAAlB,CAAP;AACD,CAnCD;;AAqCA,IAAIM,oBAAoB,GAAG,SAASA,oBAAT,CAA8BH,OAA9B,EAAuCC,SAAvC,EAAkDe,KAAlD,EAAyD;AAClF,MAAIZ,OAAO,GAAGY,KAAK,CAACZ,OAApB;AAAA,MACIb,eAAe,GAAGyB,KAAK,CAACzB,eAD5B;AAAA,MAEIG,eAAe,GAAGsB,KAAK,CAACtB,eAF5B;AAAA,MAGIF,YAAY,GAAGwB,KAAK,CAACxB,YAHzB;AAAA,MAIIK,YAAY,GAAGmB,KAAK,CAACnB,YAJzB;;AAMA,MAAI,CAACO,OAAL,EAAc;AACZ,WAAO,CAACV,eAAD,EAAkBG,YAAlB,CAAP;AACD;;AAED,MAAIoB,gBAAgB,GAAGhC,kBAAkB,CAACS,eAAD,CAAzC;AACA,MAAIwB,iBAAiB,GAAGhC,mBAAmB,CAACQ,eAAD,CAA3C;;AAEA,MAAIR,mBAAmB,CAACK,eAAD,CAAvB,EAA0C;AACxC,QAAIV,WAAW,CAACmB,OAAD,EAAUC,SAAV,CAAf,EAAqC;AACnC,UAAI,CAACiB,iBAAL,EAAwB;AACtB,eAAO,CAACC,aAAa,CAACzB,eAAD,CAAd,EAAiC0B,YAAY,CAACvB,YAAD,CAA7C,CAAP;AACD;AACF,KAJD,MAIO,IAAIjB,UAAU,CAACoB,OAAD,EAAUC,SAAV,CAAV,IAAkC,CAACgB,gBAAvC,EAAyD;AAC9D,aAAO,CAACG,YAAY,CAAC1B,eAAD,CAAb,EAAgCyB,aAAa,CAACtB,YAAD,CAA7C,CAAP;AACD;AACF;;AAED,MAAIZ,kBAAkB,CAACM,eAAD,CAAtB,EAAyC;AACvC,QAAIX,UAAU,CAACoB,OAAD,EAAUC,SAAV,CAAd,EAAoC;AAClC,UAAI,CAACgB,gBAAL,EAAuB;AACrB,eAAO,CAACG,YAAY,CAAC1B,eAAD,CAAb,EAAgCyB,aAAa,CAACtB,YAAD,CAA7C,CAAP;AACD;AACF,KAJD,MAIO,IAAIhB,WAAW,CAACmB,OAAD,EAAUC,SAAV,CAAX,IAAmC,CAACiB,iBAAxC,EAA2D;AAChE,aAAO,CAACC,aAAa,CAACzB,eAAD,CAAd,EAAiC0B,YAAY,CAACvB,YAAD,CAA7C,CAAP;AACD;AACF;;AAED,SAAO,CAACH,eAAD,EAAkBG,YAAlB,CAAP;AACD,CAnCD;;AAqCA,IAAIwB,sBAAsB,GAAG,SAASA,sBAAT,CAAgCC,QAAhC,EAA0CC,MAA1C,EAAkD;AAC7E,MAAIC,WAAW,GAAG9C,SAAS,CAAC+C,IAAV,CAAe,UAAUC,gBAAV,EAA4B;AAC3D,WAAOA,gBAAgB,KAAKH,MAAM,GAAG,GAAT,GAAeD,QAAQ,CAACK,KAAT,CAAe,GAAf,EAAoB,CAApB,CAA3C;AACD,GAFiB,CAAlB;AAGArD,EAAAA,SAAS,CAACkD,WAAD,EAAc,sDAAsDF,QAAtD,GAAiE,4BAAjE,GAAgGC,MAAhG,GAAyG,IAAvH,CAAT;AACA,SAAOC,WAAP;AACD,CAND;;AAQA,IAAII,wBAAwB,GAAG,SAASA,wBAAT,CAAkCN,QAAlC,EAA4CC,MAA5C,EAAoD;AACjF,MAAIC,WAAW,GAAG9C,SAAS,CAAC+C,IAAV,CAAe,UAAUC,gBAAV,EAA4B;AAC3D,WAAOA,gBAAgB,KAAKJ,QAAQ,CAACK,KAAT,CAAe,GAAf,EAAoB,CAApB,IAAyB,GAAzB,GAA+BJ,MAA3D;AACD,GAFiB,CAAlB;AAGAjD,EAAAA,SAAS,CAACkD,WAAD,EAAc,sDAAsDF,QAAtD,GAAiE,8BAAjE,GAAkGC,MAAlG,GAA2G,IAAzH,CAAT;AACA,SAAOC,WAAP;AACD,CAND;;AAQA,IAAIV,cAAc,GAAG,SAASA,cAAT,CAAwBQ,QAAxB,EAAkC;AACrD,SAAOD,sBAAsB,CAACC,QAAD,EAAW,QAAX,CAA7B;AACD,CAFD;;AAIA,IAAIP,WAAW,GAAG,SAASA,WAAT,CAAqBO,QAArB,EAA+B;AAC/C,SAAOD,sBAAsB,CAACC,QAAD,EAAW,KAAX,CAA7B;AACD,CAFD;;AAIA,IAAIF,YAAY,GAAG,SAASA,YAAT,CAAsBE,QAAtB,EAAgC;AACjD,SAAOM,wBAAwB,CAACN,QAAD,EAAW,MAAX,CAA/B;AACD,CAFD;;AAIA,IAAIH,aAAa,GAAG,SAASA,aAAT,CAAuBG,QAAvB,EAAiC;AACnD,SAAOM,wBAAwB,CAACN,QAAD,EAAW,OAAX,CAA/B;AACD,CAFD","sourcesContent":["import invariant from 'invariant';\nimport { useCallback, useState, useEffect } from 'react';\nimport { positions } from '../defaultPosition';\nimport { fitsOnBottom, fitsOnLeft, fitsOnRight, fitsOnTop, getDefaultAlign, isPositionedToBottom, isPositionedToLeft, isPositionedToRight, isPositionedToTop } from '../utils';\n\nvar useAutoFlip = function useAutoFlip(enableAutoHorizontalFlip, enableAutoVerticalFlip, initialPosition, initialAlign) {\n  var _useState = useState(initialPosition),\n      currentPosition = _useState[0],\n      setCurrentPosition = _useState[1];\n\n  var _useState2 = useState(initialAlign || getDefaultAlign(initialPosition)),\n      currentAlign = _useState2[0],\n      setCurrentAlign = _useState2[1];\n\n  useEffect(function () {\n    setCurrentPosition(initialPosition);\n    setCurrentAlign(initialAlign || getDefaultAlign(initialPosition));\n  }, [initialAlign, initialPosition]);\n  var checkAlignment = useCallback(function (nodeRef, anchorRef) {\n    var _autoFlipHorizontally = autoFlipHorizontally(nodeRef, anchorRef, {\n      enabled: enableAutoHorizontalFlip,\n      initialPosition: initialPosition,\n      initialAlign: initialAlign,\n      currentPosition: currentPosition,\n      currentAlign: currentAlign\n    }),\n        horizontalPosition = _autoFlipHorizontally[0],\n        horizontalAlign = _autoFlipHorizontally[1];\n\n    var _autoFlipVertically = autoFlipVertically(nodeRef, anchorRef, {\n      enabled: enableAutoVerticalFlip,\n      initialPosition: initialPosition,\n      initialAlign: initialAlign,\n      currentPosition: horizontalPosition,\n      currentAlign: horizontalAlign\n    }),\n        verticalPosition = _autoFlipVertically[0],\n        verticalAlign = _autoFlipVertically[1];\n\n    if (verticalPosition !== currentPosition) {\n      setCurrentPosition(verticalPosition);\n    }\n\n    if (verticalAlign !== currentAlign) {\n      setCurrentAlign(verticalAlign);\n    }\n  }, [currentAlign, currentPosition, enableAutoHorizontalFlip, enableAutoVerticalFlip, initialAlign, initialPosition]);\n  return [currentPosition, currentAlign, checkAlignment];\n};\n\nexport default useAutoFlip;\n\nvar autoFlipVertically = function autoFlipVertically(nodeRef, anchorRef, _ref) {\n  var enabled = _ref.enabled,\n      initialPosition = _ref.initialPosition,\n      currentPosition = _ref.currentPosition,\n      initialAlign = _ref.initialAlign,\n      currentAlign = _ref.currentAlign;\n\n  if (!enabled) {\n    return [currentPosition, currentAlign];\n  }\n\n  var positionedToBottom = isPositionedToBottom(currentPosition);\n  var positionedToTop = isPositionedToTop(currentPosition);\n\n  if (isPositionedToBottom(initialPosition)) {\n    if (fitsOnBottom(nodeRef, anchorRef)) {\n      if (!positionedToBottom) {\n        return [switchToBottom(currentPosition), switchToTop(currentAlign)];\n      }\n    } else if (fitsOnTop(nodeRef, anchorRef) && !positionedToTop) {\n      return [switchToTop(currentPosition), switchToBottom(currentAlign)];\n    }\n  }\n\n  if (isPositionedToTop(initialPosition)) {\n    if (fitsOnTop(nodeRef, anchorRef)) {\n      if (!positionedToTop) {\n        return [switchToTop(currentPosition), switchToBottom(currentAlign)];\n      }\n    } else if (fitsOnBottom(nodeRef, anchorRef) && !positionedToBottom) {\n      return [switchToBottom(currentPosition), switchToTop(currentAlign)];\n    }\n  }\n\n  return [currentPosition, currentAlign];\n};\n\nvar autoFlipHorizontally = function autoFlipHorizontally(nodeRef, anchorRef, _ref2) {\n  var enabled = _ref2.enabled,\n      initialPosition = _ref2.initialPosition,\n      currentPosition = _ref2.currentPosition,\n      initialAlign = _ref2.initialAlign,\n      currentAlign = _ref2.currentAlign;\n\n  if (!enabled) {\n    return [currentPosition, currentAlign];\n  }\n\n  var positionedToLeft = isPositionedToLeft(currentPosition);\n  var positionedToRight = isPositionedToRight(currentPosition);\n\n  if (isPositionedToRight(initialPosition)) {\n    if (fitsOnRight(nodeRef, anchorRef)) {\n      if (!positionedToRight) {\n        return [switchToRight(currentPosition), switchToLeft(currentAlign)];\n      }\n    } else if (fitsOnLeft(nodeRef, anchorRef) && !positionedToLeft) {\n      return [switchToLeft(currentPosition), switchToRight(currentAlign)];\n    }\n  }\n\n  if (isPositionedToLeft(initialPosition)) {\n    if (fitsOnLeft(nodeRef, anchorRef)) {\n      if (!positionedToLeft) {\n        return [switchToLeft(currentPosition), switchToRight(currentAlign)];\n      }\n    } else if (fitsOnRight(nodeRef, anchorRef) && !positionedToRight) {\n      return [switchToRight(currentPosition), switchToLeft(currentAlign)];\n    }\n  }\n\n  return [currentPosition, currentAlign];\n};\n\nvar switchVerticalPosition = function switchVerticalPosition(position, target) {\n  var newPosition = positions.find(function (standardPosition) {\n    return standardPosition === target + \" \" + position.split(' ')[1];\n  });\n  invariant(newPosition, \"Could not determine new position. Old position \\\"\" + position + \"\\\", new vertical target \\\"\" + target + \"\\\"\");\n  return newPosition;\n};\n\nvar switchHorizontalPosition = function switchHorizontalPosition(position, target) {\n  var newPosition = positions.find(function (standardPosition) {\n    return standardPosition === position.split(' ')[0] + \" \" + target;\n  });\n  invariant(newPosition, \"Could not determine new position. Old position \\\"\" + position + \"\\\", new horizontal target \\\"\" + target + \"\\\"\");\n  return newPosition;\n};\n\nvar switchToBottom = function switchToBottom(position) {\n  return switchVerticalPosition(position, 'bottom');\n};\n\nvar switchToTop = function switchToTop(position) {\n  return switchVerticalPosition(position, 'top');\n};\n\nvar switchToLeft = function switchToLeft(position) {\n  return switchHorizontalPosition(position, 'left');\n};\n\nvar switchToRight = function switchToRight(position) {\n  return switchHorizontalPosition(position, 'right');\n};"]},"metadata":{},"sourceType":"module"}