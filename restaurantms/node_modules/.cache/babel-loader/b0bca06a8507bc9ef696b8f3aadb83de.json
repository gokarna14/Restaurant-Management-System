{"ast":null,"code":"var _jsxFileName = \"/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Update/Update.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { SearchKeys, dataType, columns, dontIncludeInFrom } from '../db';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Update = props => {\n  _s();\n\n  const [sql, setSQL] = useState('');\n  const [id, setID] = useState('');\n  const [nextStep, setNextStep] = useState(false);\n  const [changedValues, setChangedValues] = useState({});\n\n  const idUpdate = e => {\n    e.preventDefault();\n\n    if (id !== '') {\n      setNextStep(true);\n    }\n  };\n\n  const changed = (value, key) => {\n    var temp = {};\n    temp[key] = value;\n    setChangedValues({ ...changedValues,\n      ...temp\n    });\n  };\n\n  const applyChanges = e => {\n    e.preventDefault();\n    console.log(changedValues);\n  };\n\n  const fields = Object.keys(SearchKeys[props.table]).map(key => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: !dontIncludeInFrom[props.table].includes(key) && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: key\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), key !== 'Sex' && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: dataType[props.table][key + \" type\"],\n          onChange: e => {\n            changed(e.target.value, key);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 44\n        }, this), key == 'Sex' && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          maxLength: \"1\",\n          placeholder: \"M or F or O\",\n          onChange: e => {\n            changed(e.target.value, key);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 43\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 70\n      }, this)\n    }, void 0, false);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"updateWithID\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: idUpdate,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Enter the ID of the data you want to change\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"\",\n          id: \"\",\n          onChange: e => {\n            setID(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"DONE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: applyChanges,\n        children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Enter the Changes you want to apply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), fields, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"APPLY\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Update, \"RGXLPnMnY2u6sAOUZJTsnA30D3Y=\");\n\n_c = Update;\nexport default Update;\n\nvar _c;\n\n$RefreshReg$(_c, \"Update\");","map":{"version":3,"sources":["/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Update/Update.js"],"names":["React","useState","SearchKeys","dataType","columns","dontIncludeInFrom","Update","props","sql","setSQL","id","setID","nextStep","setNextStep","changedValues","setChangedValues","idUpdate","e","preventDefault","changed","value","key","temp","applyChanges","console","log","fields","Object","keys","table","map","includes","target"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { SearchKeys, dataType, columns, dontIncludeInFrom } from '../db'\n\n\nconst Update = (props) =>{\n\n    const [sql, setSQL] = useState('')\n    const [id, setID] = useState('')\n    const [nextStep, setNextStep] = useState(false)\n    const [changedValues, setChangedValues] = useState({})\n\n    const idUpdate =(e)=>{\n        e.preventDefault()\n        if (id !== ''){ \n            setNextStep(true)\n        }\n    }\n\n    const changed =(value, key)=>{\n        var temp = {}\n        temp[key] = value\n        setChangedValues(\n            {\n                ...changedValues,\n                ...temp\n            }\n        )\n    }\n\n    const applyChanges=(e)=>{\n        e.preventDefault()\n        console.log(changedValues)\n    }\n\n    const fields = Object.keys(SearchKeys[props.table]).map(\n        (key)=>{\n            return(\n                <>\n                   {!dontIncludeInFrom[props.table].includes(key) && <div>\n                        <label>{key}</label>\n                        { key !== 'Sex' && <input type={dataType[props.table][key + \" type\"]} onChange={(e)=>{changed(e.target.value, key)}} />}\n                        { key == 'Sex' && <input type='text' maxLength=\"1\" placeholder='M or F or O' onChange={(e)=>{changed(e.target.value, key)}}/>}\n                    </div>}\n                </>\n            )\n        }\n    )\n\n\n    return(\n        <div>\n            <div className='updateWithID'>\n                <form onSubmit={idUpdate} >\n                    <label>\n                        Enter the ID of the data you want to change\n                    </label>\n                    <input type=\"number\" name=\"\" id=\"\" onChange={(e)=>{setID(e.target.value)}} />\n                    <input type=\"submit\" value=\"DONE\"/>\n                </form>\n                <form onSubmit={applyChanges}>\n                    <hr />\n                    <label>Enter the Changes you want to apply</label>\n                    {fields}\n                    <input type=\"submit\" value='APPLY' />\n                </form>\n            </div>\n            \n            \n\n        </div>\n    )\n}\n\nexport default Update;"]},"metadata":{},"sourceType":"module"}