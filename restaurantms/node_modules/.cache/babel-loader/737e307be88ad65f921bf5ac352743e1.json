{"ast":null,"code":"var _jsxFileName = \"/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Update/Update.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { SearchKeys, dataType, columns } from '../db';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Update = props => {\n  _s();\n\n  const [sql, setSQL] = useState('');\n  const [id, setID] = useState('');\n  const [nextStep, setNextStep] = useState(false);\n  const [cahngedValues, setChangedValues] = useState({});\n\n  const idUpdate = e => {\n    e.preventDefault();\n\n    if (id !== '') {\n      setNextStep(true);\n    }\n  };\n\n  const changed = (value, key) => {};\n\n  const applyChanges = e => {\n    e.preventDefault();\n  };\n\n  const fields = Object.keys(SearchKeys[props.table]).map(key => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: key\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this), key !== 'Sex' && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: dataType[props.table][key + \" type\"],\n        onChange: e => {\n          cahnged(e.target.value, key);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 40\n      }, this), key == 'Sex' && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        maxLength: \"1\",\n        placeholder: \"M or F or O\",\n        onChange: e => {\n          cahnged(e.target.value, key);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"updateWithID\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: idUpdate,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Enter the ID of the data you want to change\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"\",\n          id: \"\",\n          onChange: e => {\n            setID(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"DONE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: applyChanges,\n        children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Enter the Changes you want to apply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), fields, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"APPLY\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Update, \"uwnqNt1vtvquArutIt+zq0PemHI=\");\n\n_c = Update;\nexport default Update;\n\nvar _c;\n\n$RefreshReg$(_c, \"Update\");","map":{"version":3,"sources":["/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Update/Update.js"],"names":["React","useState","SearchKeys","dataType","columns","Update","props","sql","setSQL","id","setID","nextStep","setNextStep","cahngedValues","setChangedValues","idUpdate","e","preventDefault","changed","value","key","applyChanges","fields","Object","keys","table","map","cahnged","target"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { SearchKeys, dataType, columns } from '../db'\n\n\nconst Update = (props) =>{\n\n    const [sql, setSQL] = useState('')\n    const [id, setID] = useState('')\n    const [nextStep, setNextStep] = useState(false)\n    const [cahngedValues, setChangedValues] = useState({})\n\n    const idUpdate =(e)=>{\n        e.preventDefault()\n        if (id !== ''){ \n            setNextStep(true)\n        }\n    }\n\n    const changed =(value, key)=>{\n\n    }\n\n    const applyChanges=(e)=>{\n        e.preventDefault()\n    }\n\n    const fields = Object.keys(SearchKeys[props.table]).map(\n        (key)=>{\n            return(\n                <div>\n                    <label>{key}</label>\n                    { key !== 'Sex' && <input type={dataType[props.table][key + \" type\"]} onChange={(e)=>{cahnged(e.target.value, key)}} />}\n                    { key == 'Sex' && <input type='text' maxLength=\"1\" placeholder='M or F or O' onChange={(e)=>{cahnged(e.target.value, key)}}/>}\n                </div>\n            )\n        }\n    )\n\n\n    return(\n        <div>\n            <div className='updateWithID'>\n                <form onSubmit={idUpdate} >\n                    <label>\n                        Enter the ID of the data you want to change\n                    </label>\n                    <input type=\"number\" name=\"\" id=\"\" onChange={(e)=>{setID(e.target.value)}} />\n                    <input type=\"submit\" value=\"DONE\"/>\n                </form>\n                <form onSubmit={applyChanges}>\n                    <hr />\n                    <label>Enter the Changes you want to apply</label>\n                    {fields}\n                    <input type=\"submit\" value='APPLY' />\n                </form>\n            </div>\n            \n            \n\n        </div>\n    )\n}\n\nexport default Update;"]},"metadata":{},"sourceType":"module"}