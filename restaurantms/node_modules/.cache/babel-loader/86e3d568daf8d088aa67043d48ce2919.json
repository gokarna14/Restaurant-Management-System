{"ast":null,"code":"import { useEffect } from 'react';\n\nfunction useWatcher(watcher, _ref) {\n  var updateOnAnimationFrame = _ref.updateOnAnimationFrame,\n      enabled = _ref.enabled;\n  useEffect(function () {\n    var animationFrameId;\n    var idleCallbackId; // do not track in node\n\n    if (enabled && typeof window.requestAnimationFrame !== 'undefined') {\n      var callback = function callback() {\n        watcher();\n\n        if (updateOnAnimationFrame) {\n          animationFrameId = requestAnimationFrame(callback);\n        } else {\n          idleCallbackId = requestIdleCallback(callback);\n        }\n      };\n\n      callback();\n    }\n\n    return function () {\n      if (animationFrameId) {\n        cancelAnimationFrame(animationFrameId);\n      }\n\n      if (idleCallbackId) {\n        cancelIdleCallback(idleCallbackId);\n      }\n    };\n  }, [updateOnAnimationFrame, watcher, enabled]);\n}\n\nexport default useWatcher;","map":{"version":3,"sources":["/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/node_modules/react-stick/es/hooks/useWatcher.js"],"names":["useEffect","useWatcher","watcher","_ref","updateOnAnimationFrame","enabled","animationFrameId","idleCallbackId","window","requestAnimationFrame","callback","requestIdleCallback","cancelAnimationFrame","cancelIdleCallback"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;;AAEA,SAASC,UAAT,CAAoBC,OAApB,EAA6BC,IAA7B,EAAmC;AACjC,MAAIC,sBAAsB,GAAGD,IAAI,CAACC,sBAAlC;AAAA,MACIC,OAAO,GAAGF,IAAI,CAACE,OADnB;AAEAL,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAIM,gBAAJ;AACA,QAAIC,cAAJ,CAFoB,CAEA;;AAEpB,QAAIF,OAAO,IAAI,OAAOG,MAAM,CAACC,qBAAd,KAAwC,WAAvD,EAAoE;AAClE,UAAIC,QAAQ,GAAG,SAASA,QAAT,GAAoB;AACjCR,QAAAA,OAAO;;AAEP,YAAIE,sBAAJ,EAA4B;AAC1BE,UAAAA,gBAAgB,GAAGG,qBAAqB,CAACC,QAAD,CAAxC;AACD,SAFD,MAEO;AACLH,UAAAA,cAAc,GAAGI,mBAAmB,CAACD,QAAD,CAApC;AACD;AACF,OARD;;AAUAA,MAAAA,QAAQ;AACT;;AAED,WAAO,YAAY;AACjB,UAAIJ,gBAAJ,EAAsB;AACpBM,QAAAA,oBAAoB,CAACN,gBAAD,CAApB;AACD;;AAED,UAAIC,cAAJ,EAAoB;AAClBM,QAAAA,kBAAkB,CAACN,cAAD,CAAlB;AACD;AACF,KARD;AASD,GA3BQ,EA2BN,CAACH,sBAAD,EAAyBF,OAAzB,EAAkCG,OAAlC,CA3BM,CAAT;AA4BD;;AAED,eAAeJ,UAAf","sourcesContent":["import { useEffect } from 'react';\n\nfunction useWatcher(watcher, _ref) {\n  var updateOnAnimationFrame = _ref.updateOnAnimationFrame,\n      enabled = _ref.enabled;\n  useEffect(function () {\n    var animationFrameId;\n    var idleCallbackId; // do not track in node\n\n    if (enabled && typeof window.requestAnimationFrame !== 'undefined') {\n      var callback = function callback() {\n        watcher();\n\n        if (updateOnAnimationFrame) {\n          animationFrameId = requestAnimationFrame(callback);\n        } else {\n          idleCallbackId = requestIdleCallback(callback);\n        }\n      };\n\n      callback();\n    }\n\n    return function () {\n      if (animationFrameId) {\n        cancelAnimationFrame(animationFrameId);\n      }\n\n      if (idleCallbackId) {\n        cancelIdleCallback(idleCallbackId);\n      }\n    };\n  }, [updateOnAnimationFrame, watcher, enabled]);\n}\n\nexport default useWatcher;"]},"metadata":{},"sourceType":"module"}