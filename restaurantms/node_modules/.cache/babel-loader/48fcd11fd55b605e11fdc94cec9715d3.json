{"ast":null,"code":"var _jsxFileName = \"/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Customer/CCustomer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport swal from 'sweetalert';\nimport { SearchKeys, dataType } from '../db';\nimport Information from '../Information';\nimport './Customer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CCustomer = () => {\n  _s();\n\n  const [custInformation, setCustInformation] = useState(SearchKeys.CUSTOMERS);\n  const [cusTypes, setcusTypes] = useState(dataType.CUSTOMERS);\n\n  const inputDetect = (value, key) => {\n    const adder = { ...custInformation\n    };\n    adder[key] = value;\n\n    if (String(key) === value) {\n      adder[key] = null;\n    }\n\n    setCustInformation(adder);\n  };\n\n  const fields = Object.keys(custInformation).map(key => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"i\",\n      children: (() => {\n        if (!['Customer ID'].includes(key)) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 37\n            }, this), (() => {\n              if (cusTypes[key + \" select\"]) {\n                return /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: cusTypes[key + \" class\"],\n                  id: cusTypes[key + \" id\"],\n                  type: cusTypes[key + \" type\"],\n                  placeholder: key,\n                  onChange: e => {\n                    inputDetect(e.target.value, key);\n                  },\n                  children: cusTypes[key + \" select options\"]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 45\n                }, this);\n              } else {\n                return /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: cusTypes[key + \" class\"],\n                  required: cusTypes[key + \" required\"],\n                  id: cusTypes[key + \" id\"],\n                  type: cusTypes[key + \" type\"],\n                  placeholder: key,\n                  onChange: e => {\n                    inputDetect(e.target.value, key);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 49\n                }, this);\n              }\n            })()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 37\n          }, this);\n        }\n      })()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this);\n  });\n\n  const addCustomer = e => {\n    e.preventDefault();\n    const adder = { ...custInformation\n    };\n    adder.table = 'CUSTOMERS';\n    axios.post('/api/add', adder).then(res => {}).catch(err => {\n      console.log(err);\n    });\n    swal(\"DONE\", \"New Customer Recorded\", \"success\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a new customer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aa\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        style: {\n          textAlign: 'left',\n          padding: '0% 70% 0% 3%'\n        },\n        onSubmit: addCustomer,\n        children: [fields, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"btn btn-outline-danger\",\n          type: \"submit\",\n          value: \"ADD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inf\",\n      children: /*#__PURE__*/_jsxDEV(Information, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CCustomer, \"WhmeCsO8M4Vbk6UnaSvJOYc03Ng=\");\n\n_c = CCustomer;\nexport default CCustomer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CCustomer\");","map":{"version":3,"sources":["/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Customer/CCustomer.js"],"names":["React","useState","axios","swal","SearchKeys","dataType","Information","CCustomer","custInformation","setCustInformation","CUSTOMERS","cusTypes","setcusTypes","inputDetect","value","key","adder","String","fields","Object","keys","map","includes","e","target","addCustomer","preventDefault","table","post","then","res","catch","err","console","log","textAlign","padding"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport axios from 'axios'\nimport swal from 'sweetalert';\n\n\nimport { SearchKeys, dataType } from '../db';\nimport Information from '../Information';\nimport './Customer.css'\n\n\nconst CCustomer =()=>{\n\n    const [custInformation, setCustInformation] = useState(SearchKeys.CUSTOMERS)\n    const[cusTypes, setcusTypes] = useState(dataType.CUSTOMERS)\n\n    const inputDetect=(value, key)=>{\n        const adder = {...custInformation}\n        adder[key] = value\n        if(String(key) === value){\n            adder[key] = null\n        }\n        setCustInformation(adder)\n    }\n\n    const fields = Object.keys(custInformation).map(\n        (key)=>{\n            return(\n                <div className=\"i\">\n                {\n                    (\n                        ()=>{\n                            if(!['Customer ID'].includes(key)){\n                                return(\n                                    <div>\n                                    <label>                    \n                        {key}\n                    </label>\n                        {\n                            (\n                                ()=>{\n                                    if (cusTypes[key + \" select\"]){\n                                        return(\n                                            <select className={cusTypes[key + \" class\"]}\n                                                id={cusTypes[key + \" id\"]}\n                                                type={cusTypes[key + \" type\"]} \n                                                placeholder={key} \n                                                onChange={(e)=>{inputDetect(e.target.value, key)}} \n                                            >\n                                                {cusTypes[key + \" select options\"]}\n                                            </select>\n                                        )\n                                    }else{\n                                            return(\n                                                <input  className={cusTypes[key + \" class\"]}\n                                                    required={cusTypes[key + \" required\"]}\n                                                    id={cusTypes[key + \" id\"]}\n                                                    type={cusTypes[key + \" type\"]} \n                                                    placeholder={key} \n                                                    onChange={(e)=>{inputDetect(e.target.value, key)}} \n                                                    />\n                                            )\n                                        }\n                                    }\n                            )()\n                        }\n                                    </div>\n                                )\n                            }\n                        }\n                    )()\n                }\n                </div>\n                )\n                \n        }\n    )\n\n\n    const addCustomer =(e)=>{\n        e.preventDefault()\n        const adder = {...custInformation}\n        adder.table = 'CUSTOMERS'\n        axios.post('/api/add', adder).then(res=>{\n        }).catch(err=>{\n            console.log(err)\n        })\n        swal(\"DONE\", \"New Customer Recorded\", \"success\");\n        \n    }\n\n    return(\n        <div>\n            <hr />\n            <h2>Add a new customer</h2>\n            <hr />\n            <div className=\"aa\">\n                <form style={{textAlign:'left', padding:'0% 70% 0% 3%'}} onSubmit={addCustomer}>\n                    {fields}\n                    <br />\n                    <input className=\"btn btn-outline-danger\" type=\"submit\" value=\"ADD\"/>\n                </form>\n            </div>\n            <div className=\"inf\">\n                    <Information></Information>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default CCustomer;"]},"metadata":{},"sourceType":"module"}