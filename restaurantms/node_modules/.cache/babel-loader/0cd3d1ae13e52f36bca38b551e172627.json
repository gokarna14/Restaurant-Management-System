{"ast":null,"code":"var _jsxFileName = \"/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Customer/CCustomer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport swal from 'sweetalert';\nimport { SearchKeys, dataType } from '../db';\nimport Information from '../Information';\nimport './Customer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CCustomer = () => {\n  _s();\n\n  const [custInformation, setCustInformation] = useState({});\n  const [cusTypes, setcusTypes] = useState(dataType.CUSTOMERS);\n\n  const inputDetect = (value, key) => {\n    const adder = { ...custInformation\n    };\n    key = SearchKeys.CUSTOMERS[key];\n    adder[key] = value;\n    setCustInformation(adder);\n  };\n\n  const fields = Object.keys(SearchKeys.CUSTOMERS).map(key => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"i\",\n      children: (() => {\n        if (!['Customer ID'].includes(key)) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 37\n            }, this), (() => {\n              if (cusTypes[key + \" select\"]) {\n                return /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: cusTypes[key + \" class\"],\n                  id: cusTypes[key + \" id\"],\n                  type: cusTypes[key + \" type\"],\n                  placeholder: key,\n                  onChange: e => {\n                    inputDetect(e.target.value, key);\n                  },\n                  children: cusTypes[key + \" select options\"]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 45\n                }, this);\n              } else {\n                return /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: cusTypes[key + \" class\"],\n                  required: cusTypes[key + \" required\"],\n                  id: cusTypes[key + \" id\"],\n                  type: cusTypes[key + \" type\"],\n                  placeholder: key,\n                  onChange: e => {\n                    inputDetect(e.target.value, key);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 49\n                }, this);\n              }\n            })()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 37\n          }, this);\n        }\n      })()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this);\n  });\n\n  const addSQL = adder => {\n    var sql = 'INSERT INTO ' + adder.table + \" (\";\n\n    for (var i in adder) {\n      sql += \"'\" + i + \"',\";\n    }\n\n    sql += \") VALUES (\";\n\n    for (i in adder) {\n      sql += \"'\" + i + \"',\";\n    }\n\n    sql += \")\";\n    adder.sql = sql;\n    return sql;\n  };\n\n  const addCustomer = e => {\n    e.preventDefault();\n    var adder = { ...custInformation\n    };\n    adder.table = 'CUSTOMERS';\n    adder = addSQL(adder);\n    console.log(adder);\n    axios.post('/api/add', adder).then(res => {}).catch(err => {\n      console.log(err);\n    });\n    swal(\"DONE\", \"New Customer Recorded\", \"success\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a new customer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aa\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        style: {\n          textAlign: 'left',\n          padding: '0% 70% 0% 3%'\n        },\n        onSubmit: addCustomer,\n        children: [fields, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"btn btn-outline-danger\",\n          type: \"submit\",\n          value: \"ADD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inf\",\n      children: /*#__PURE__*/_jsxDEV(Information, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CCustomer, \"ZmJfO5skxQy+UfwlA1TnBHrc0DI=\");\n\n_c = CCustomer;\nexport default CCustomer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CCustomer\");","map":{"version":3,"sources":["/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Customer/CCustomer.js"],"names":["React","useState","axios","swal","SearchKeys","dataType","Information","CCustomer","custInformation","setCustInformation","cusTypes","setcusTypes","CUSTOMERS","inputDetect","value","key","adder","fields","Object","keys","map","includes","e","target","addSQL","sql","table","i","addCustomer","preventDefault","console","log","post","then","res","catch","err","textAlign","padding"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport axios from 'axios'\nimport swal from 'sweetalert';\n\n\nimport { SearchKeys, dataType } from '../db';\nimport Information from '../Information';\nimport './Customer.css'\n\n\nconst CCustomer =()=>{\n\n    const [custInformation, setCustInformation] = useState({})\n    const[cusTypes, setcusTypes] = useState(dataType.CUSTOMERS)\n\n    const inputDetect=(value, key)=>{\n        const adder = {...custInformation}\n        key = SearchKeys.CUSTOMERS[key]\n        adder[key] = value\n        setCustInformation(adder)\n    }\n\n    const fields = Object.keys(SearchKeys.CUSTOMERS).map(\n        (key)=>{\n            return(\n                <div className=\"i\">\n                {\n                    (\n                        ()=>{\n                            if(!['Customer ID'].includes(key)){\n                                return(\n                                    <div>\n                                    <label>                    \n                        {key}\n                    </label>\n                        {\n                            (\n                                ()=>{\n                                    if (cusTypes[key + \" select\"]){\n                                        return(\n                                            <select className={cusTypes[key + \" class\"]}\n                                                id={cusTypes[key + \" id\"]}\n                                                type={cusTypes[key + \" type\"]} \n                                                placeholder={key} \n                                                onChange={(e)=>{inputDetect(e.target.value, key)}} \n                                            >\n                                                {cusTypes[key + \" select options\"]}\n                                            </select>\n                                        )\n                                    }else{\n                                            return(\n                                                <input  className={cusTypes[key + \" class\"]}\n                                                    required={cusTypes[key + \" required\"]}\n                                                    id={cusTypes[key + \" id\"]}\n                                                    type={cusTypes[key + \" type\"]} \n                                                    placeholder={key} \n                                                    onChange={(e)=>{inputDetect(e.target.value, key)}} \n                                                    />\n                                            )\n                                        }\n                                    }\n                            )()\n                        }\n                                    </div>\n                                )\n                            }\n                        }\n                    )()\n                }\n                </div>\n                )\n                \n        }\n    )\n\n    const addSQL=(adder)=>{\n        var sql = 'INSERT INTO ' + adder.table + \" (\"\n        for(var i in adder){\n            sql += ( \"'\" + i + \"',\")\n        }\n        sql += \") VALUES (\"\n        for(i in adder){\n            sql += ( \"'\" + i + \"',\")\n        }\n        sql += \")\"\n        adder.sql = sql\n        return sql;\n    }\n\n    const addCustomer =(e)=>{\n        e.preventDefault()\n        var adder = {...custInformation}\n        adder.table = 'CUSTOMERS'\n        adder = addSQL(adder);\n        console.log(adder)\n        axios.post('/api/add', adder).then(res=>{\n        }).catch(err=>{\n            console.log(err)\n        })\n        swal(\"DONE\", \"New Customer Recorded\", \"success\");\n        \n    }\n\n    return(\n        <div>\n            <hr />\n            <h2>Add a new customer</h2>\n            <hr />\n            <div className=\"aa\">\n                <form style={{textAlign:'left', padding:'0% 70% 0% 3%'}} onSubmit={addCustomer}>\n                    {fields}\n                    <br />\n                    <input className=\"btn btn-outline-danger\" type=\"submit\" value=\"ADD\"/>\n                </form>\n            </div>\n            <div className=\"inf\">\n                    <Information></Information>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default CCustomer;"]},"metadata":{},"sourceType":"module"}