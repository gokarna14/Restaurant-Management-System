{"ast":null,"code":"var _jsxFileName = \"/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Customer/CCustomer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { InputGroup } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CCustomer = () => {\n  _s();\n\n  const [custInformation, setCustInformation] = useState({\n    \"First Name\": null,\n    \"Middle Name\": null,\n    \"Last Name\": null,\n    \"Sex\": null,\n    \"Phone Number\": null,\n    \"Email Address\": null,\n    \"Date of birth\": null,\n    \"Address\": null\n  });\n  const [types, setTypes] = useState({\n    \"First Name class\": \"form-control\",\n    \"Middle Name class\": \"form-control\",\n    \"Last Name class\": \"form-control\",\n    \"Sex class\": \"form-control\",\n    \"Phone Number class\": \"form-control\",\n    \"Email Address class\": \"form-control\",\n    \"Date of birth class\": \"form-control\",\n    \"Address class\": \"form-control\",\n    \"First Name id\": \"\",\n    \"Middle Name id\": \"\",\n    \"Last Name id\": \"\",\n    \"Sex id\": \"exampleFormControlSelect1\",\n    \"Phone Number id\": \"\",\n    \"Email Address id\": \"\",\n    \"Date of birth id\": \"\",\n    \"Address id\": \"\",\n    \"First Name type\": \"text\",\n    \"Middle Name type\": \"text\",\n    \"Last Name type\": \"text\",\n    \"Sex type\": \"checkbox\",\n    \"Phone Number type\": \"text\",\n    \"Email Address type\": \"email\",\n    \"Date of birth type\": \"date\",\n    \"Address type\": \"address\",\n    \"Sex select\": true,\n    \"Sex select options\": /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Male\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Female\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 54\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Other\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 77\n      }, this)]\n    }, void 0, true)\n  });\n\n  const inputDetect = (value, key) => {\n    const adder = { ...custInformation\n    };\n    adder[key] = value;\n    setCustInformation(adder);\n  };\n\n  const fields = Object.keys(custInformation).map(key => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"i\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: key\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), (() => {\n        if (types[key + \" select\"]) {\n          return /*#__PURE__*/_jsxDEV(\"select\", {\n            className: types[key + \" class\"],\n            id: types[key + \" id\"],\n            type: types[key + \" type\"],\n            placeholder: key,\n            onChange: e => {\n              inputDetect(e.target.value, key);\n            },\n            children: types[key + \" select options\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 45\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"input\", {\n            className: types[key + \" class\"],\n            id: types[key + \" id\"],\n            type: types[key + \" type\"],\n            placeholder: key,\n            onChange: e => {\n              inputDetect(e.target.value, key);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 49\n          }, this);\n        }\n      })()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this);\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(custInformation);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a new customer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        style: {\n          textAlign: 'left',\n          padding: '0% 60% 0% 3%'\n        },\n        children: [fields, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CCustomer, \"7WPHWfHHE4D8n1D4zd1vcotaSps=\");\n\n_c = CCustomer;\nexport default CCustomer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CCustomer\");","map":{"version":3,"sources":["/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Customer/CCustomer.js"],"names":["React","useState","InputGroup","CCustomer","custInformation","setCustInformation","types","setTypes","inputDetect","value","key","adder","fields","Object","keys","map","e","target","handleSubmit","preventDefault","console","log","textAlign","padding"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { InputGroup }from 'react-bootstrap'\n\nconst CCustomer =()=>{\n\n    const [custInformation, setCustInformation] = useState({\n        \"First Name\": null,\n        \"Middle Name\": null,\n        \"Last Name\": null,\n        \"Sex\": null,\n        \"Phone Number\": null,\n        \"Email Address\": null,\n        \"Date of birth\": null,\n        \"Address\": null,\n    })\n    const[types, setTypes] = useState({\n        \"First Name class\": \"form-control\",\n        \"Middle Name class\": \"form-control\",\n        \"Last Name class\": \"form-control\",\n        \"Sex class\": \"form-control\",\n        \"Phone Number class\": \"form-control\",\n        \"Email Address class\": \"form-control\",\n        \"Date of birth class\": \"form-control\",\n        \"Address class\": \"form-control\",\n\n        \"First Name id\": \"\",\n        \"Middle Name id\": \"\",\n        \"Last Name id\": \"\",\n        \"Sex id\": \"exampleFormControlSelect1\",\n        \"Phone Number id\": \"\",\n        \"Email Address id\": \"\",\n        \"Date of birth id\": \"\",\n        \"Address id\": \"\",\n\n        \"First Name type\": \"text\",\n        \"Middle Name type\": \"text\",\n        \"Last Name type\": \"text\",\n        \"Sex type\": \"checkbox\",\n        \"Phone Number type\": \"text\",\n        \"Email Address type\": \"email\",\n        \"Date of birth type\": \"date\",\n        \"Address type\": \"address\",\n\n        \"Sex select\" : true,\n        \"Sex select options\": <><option>Male</option><option>Female</option><option>Other</option></>\n    })\n\n\n    const inputDetect=(value, key)=>{\n        const adder = {...custInformation}\n        adder[key] = value\n        setCustInformation(adder)\n    }\n\n    const fields = Object.keys(custInformation).map(\n        (key)=>{\n            return(\n                <div className=\"i\">\n                    <label>                    \n                        {key}\n                    </label>\n                        {\n                            (\n                                ()=>{\n                                    if (types[key + \" select\"]){\n                                        return(\n                                            <select className={types[key + \" class\"]}\n                                                id={types[key + \" id\"]}\n                                                type={types[key + \" type\"]} \n                                                placeholder={key} \n                                                onChange={(e)=>{inputDetect(e.target.value, key)}} \n                                            >\n                                                {types[key + \" select options\"]}\n                                            </select>\n                                        )\n                                    }else{\n                                            return(\n                                                <input  className={types[key + \" class\"]}\n                                                    id={types[key + \" id\"]}\n                                                    type={types[key + \" type\"]} \n                                                    placeholder={key} \n                                                    onChange={(e)=>{inputDetect(e.target.value, key)}} \n                                                    />\n                                            )\n                                        }\n                                    }\n                            )()\n                        }\n\n                </div>\n                )\n                \n        }\n    )\n\n    const handleSubmit=(e)=>{\n        e.preventDefault()\n        console.log(custInformation);\n    }\n\n    return(\n        <div>\n            <hr />\n            <h2>Add a new customer</h2>\n            <hr />\n            <div className=\"form-group\">\n                <form onSubmit={handleSubmit} style={{textAlign:'left', padding:'0% 60% 0% 3%'}}>\n                    {fields}\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default CCustomer;"]},"metadata":{},"sourceType":"module"}