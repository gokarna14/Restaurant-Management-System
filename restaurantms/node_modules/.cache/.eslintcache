[{"/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/index.js":"1","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/reportWebVitals.js":"2","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/App.js":"3","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/AlwaysRender.js":"4","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/nabs/Navbaar.js":"5","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/nabs/NavTopics.js":"6","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Customer/CustomerIndex.js":"7","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Status/StatusIndex.js":"8","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Order/OrderIndex.js":"9","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Customer/CCustomer.js":"10","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Customer/RCustomer.js":"11","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Customer/UCustomer.js":"12","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Customer/DCustomer.js":"13","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Order/DOrder.js":"14","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Order/COrder.js":"15","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Order/ROrder.js":"16","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Order/UOrder.js":"17","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Information.js":"18","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/db.js":"19","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Display.js":"20","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Search.js":"21","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Decorate.js":"22","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Create.js":"23","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/ComplexSearch.js":"24"},{"size":500,"mtime":1626243424727,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":1626243424727,"results":"27","hashOfConfig":"26"},{"size":934,"mtime":1627033737943,"results":"28","hashOfConfig":"26"},{"size":205,"mtime":1626323906315,"results":"29","hashOfConfig":"26"},{"size":933,"mtime":1627034957818,"results":"30","hashOfConfig":"26"},{"size":715,"mtime":1626350563544,"results":"31","hashOfConfig":"26"},{"size":2606,"mtime":1627123709057,"results":"32","hashOfConfig":"26"},{"size":165,"mtime":1626324882010,"results":"33","hashOfConfig":"26"},{"size":2508,"mtime":1626333071802,"results":"34","hashOfConfig":"26"},{"size":225,"mtime":1627123794270,"results":"35","hashOfConfig":"26"},{"size":320,"mtime":1627035584972,"results":"36","hashOfConfig":"26"},{"size":170,"mtime":1626325569617,"results":"37","hashOfConfig":"26"},{"size":422,"mtime":1627033819301,"results":"38","hashOfConfig":"26"},{"size":161,"mtime":1626333126295,"results":"39","hashOfConfig":"26"},{"size":161,"mtime":1626333094502,"results":"40","hashOfConfig":"26"},{"size":159,"mtime":1626333126295,"results":"41","hashOfConfig":"26"},{"size":161,"mtime":1626333126295,"results":"42","hashOfConfig":"26"},{"size":2124,"mtime":1626366393293,"results":"43","hashOfConfig":"26"},{"size":2707,"mtime":1627199927363,"results":"44","hashOfConfig":"26"},{"size":2382,"mtime":1627199056962,"results":"45","hashOfConfig":"26"},{"size":3718,"mtime":1627124554500,"results":"46","hashOfConfig":"26"},{"size":2119,"mtime":1627035516927,"results":"47","hashOfConfig":"26"},{"size":4476,"mtime":1627123999874,"results":"48","hashOfConfig":"26"},{"size":3981,"mtime":1627198206362,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"34y20g",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"52"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"52"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/index.js",[],["110","111"],"/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/reportWebVitals.js",[],"/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/App.js",["112"],"import 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter, Route} from \"react-router-dom\";\nimport { useState } from 'react';\n\n// import Example from './js/Example';\n// import All from './js/All';\nimport AlwaysRender from './js/AlwaysRender'\nimport CustomerIndex from './js/Customer/CustomerIndex';\nimport StatusIndex from './js/Status/StatusIndex';\nimport OrderIndex from './js/Order/OrderIndex';\n\n\nfunction App() {\n\n  const CustomerDomain = \"/Customer\"\n\n  const [routing, setRouting] = useState([    // [path, component]\n    [CustomerDomain, CustomerIndex],\n    ['/Order', OrderIndex],\n    ['/Status', StatusIndex],\n])\n\n  const routeInfo = routing.map(\n    (i)=>{\n      return <Route path={i[0]} component={i[1]} exact></Route>\n    }\n  )\n\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <AlwaysRender></AlwaysRender>\n          {routeInfo}\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/AlwaysRender.js",[],"/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/nabs/Navbaar.js",["113","114"],"import React, { useState } from 'react'\nimport { Link } from 'react-router-dom';\nimport { NavTopics } from './NavTopics';\nimport { Button, Navbar, NavDropdown } from 'react-bootstrap';\n\nimport Decorate from '../Decorate';\n\n\nconst Navbaar = ()=>{ \n\n    const navItems = NavTopics.map(\n        (i)=>{\n            return (\n                <Link className={i.class} to={i.path} style={{textDecoration:'none'}}>\n                    <Button variant={i.variant}>\n                       {i.label}\n                    </Button>\n                </Link>\n            )\n        }\n    )\n\n    return (\n        <div>\n            <Navbar expand=\"lg\" bg=\"dark\" fixed=\"top\" className=\"navbar navbar-expand bg-\">\n                    {navItems}\n                    <Decorate displayText={'WELCOME TO RESTAURANT MANAGEMENT SYSTEM'} ></Decorate>\n                </Navbar>\n                <hr />\n        </div>\n            ) \n    \n}\n\nexport default Navbaar;","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/nabs/NavTopics.js",[],"/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Customer/CustomerIndex.js",["115","116"],"import React, { useState } from 'react'\nimport CCustomer from './CCustomer';\nimport RCustomer from './RCustomer';\nimport UCustomer from './UCustomer';\nimport DCustomer from './DCustomer';\n\n\nconst CustomerIndex =()=>{\n\n    const currentDomain = '/Customer';\n    const [booleans, setBooleans] = useState({\n        C : false,\n        R : false,\n        U: false,\n        D: false\n    })\n\n    const setDisplay =(code)=>{\n        setBooleans({\n            C: code === 'C',\n            R: code === 'R',\n            U: code === 'U',\n            D: code === 'D'\n        })\n    }\n    const[names, setNames] = useState([\n        {\n            label: \"Add Customer\",\n            action: ()=>{setDisplay('C')}\n        },{\n            label: \"View Registered Customer\",\n            action: ()=>{setDisplay('R')}\n        },{\n            label: \"Update Customer Info\",\n            action: ()=>{setDisplay('U')}\n        },{\n            label: \"Delete Customer Info\",\n            action: ()=>{setDisplay('D')}\n        },\n    ])\n\n\n    const buttons = names.map(\n        (i)=>{\n            return (\n                <>\n                    <button className=\"btn btn-outline-danger\" onClick={i.action}>\n                        {i.label}\n                    </button> \n                </>\n            )\n        }\n    )\n\n\n\n    return(\n        <div style={{textAlign:'center'}} >\n            <h2 >Manage Customer information</h2>\n            <hr />\n                {buttons}\n                {\n                        (\n                            ()=>{\n                                if (booleans.C){\n                                    return(\n                                        <CCustomer></CCustomer>\n\n                                    )\n                                }\n                                else if (booleans.R){\n                                    return(\n                                            <RCustomer></RCustomer>\n                                    )\n                                }\n                                else if (booleans.U){\n                                    return(\n                                            <UCustomer></UCustomer>\n                                    )\n                                }\n                                else if (booleans.D){\n                                    return(\n                                            <DCustomer></DCustomer>\n                                    )\n                                }\n                            }\n                        )()\n                    }\n        </div>\n    )\n}\n\nexport default CustomerIndex;","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Status/StatusIndex.js",[],"/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Order/OrderIndex.js",["117","118"],"import React, { useState } from 'react'\nimport COrder from './COrder';\nimport ROrder from './ROrder';\nimport UOrder from './UOrder';\nimport DOrder from './DOrder.js';\n\n\nconst OrderIndex =()=>{\n\n    const currentDomain = '/Order';\n    const [booleans, setBooleans] = useState({\n        C : false,\n        R : false,\n        U: false,\n        D: false\n    })\n\n    const setDisplay =(code)=>{\n        setBooleans({\n            C: code === 'C',\n            R: code === 'R',\n            U: code === 'U',\n            D: code === 'D'\n        })\n    }\n    const[names, setNames] = useState([\n        {\n            label: \"Add Order\",\n            action: ()=>{setDisplay('C')}\n        },{\n            label: \"View Registered Order\",\n            action: ()=>{setDisplay('R')}\n        },{\n            label: \"Update Order\",\n            action: ()=>{setDisplay('U')}\n        },{\n            label: \"Delete Order\",\n            action: ()=>{setDisplay('D')}\n        },\n    ])\n\n\n    const buttons = names.map(\n        (i)=>{\n            return (\n                <>\n                    <button className=\"btn btn-outline-danger\" onClick={i.action}>\n                        {i.label}\n                    </button> \n                </>\n            )\n        }\n    )\n\n\n\n    return(\n        <div style={{textAlign:'center'}} >\n            <h2 >Manage Order information</h2>\n                {buttons}\n                {\n                        (\n                            ()=>{\n                                if (booleans.C){\n                                    return(\n                                        <COrder></COrder>\n\n                                    )\n                                }\n                                else if (booleans.R){\n                                    return(\n                                            <ROrder></ROrder>\n                                    )\n                                }\n                                else if (booleans.U){\n                                    return(\n                                            <UOrder></UOrder>\n                                    )\n                                }\n                                else if (booleans.D){\n                                    return(\n                                            <DOrder></DOrder>\n                                    )\n                                }\n                            }\n                        )()\n                    }\n        </div>\n    )\n}\n\nexport default OrderIndex;","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Customer/CCustomer.js",["119"],"import React, { useState } from 'react'\nimport Create from '../Create';\n\n\nconst CCustomer =()=>{\n\n\n    return(\n        <div>\n            <Create table={'CUSTOMERS'} ></Create>\n        </div>\n    )\n}\n\nexport default CCustomer;","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Customer/RCustomer.js",["120"],"import React, { useState } from 'react'\nimport Search from '../Search';\n\nconst RCustomer =()=>{\n    return(\n        <div>\n            <hr />\n                <h1>Search for the Customer Information</h1>\n            <hr />\n            <Search table={'CUSTOMERS'}></Search>\n        </div>\n    )\n}\n\nexport default RCustomer;","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Customer/UCustomer.js",[],"/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Customer/DCustomer.js",["121","122","123","124","125","126"],"import React, { useState } from 'react'\nimport { SearchKeys, CusTypes, custColNames, custDB2N } from '../db'\nimport axios from 'axios'\nimport Search from '../Search'\n\n\nconst DCustomer =()=>{\n\n    return(\n        <div>\n            <hr />\n                <h1>Here you can delete CUSTOMERS Information</h1>\n            <hr />\n            <Search table={'CUSTOMERS'}></Search>\n        </div>\n    )\n}\n\nexport default DCustomer;","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Order/DOrder.js",[],"/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Order/COrder.js",[],"/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Order/ROrder.js",[],"/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Order/UOrder.js",[],"/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Information.js",["127"],"import React from 'react'\nimport { animated, useSpring, Spring } from 'react-spring';\n\n// https://www.outlookindia.com/outlooktraveller/public/uploads/articles/explore/feature-platter.jpg\nconst Information =()=>{\n\n    const members = [\n        {\n            name: 'Abhay Nepal',\n            roll: '075 BEI 003'\n        },{\n            name: 'Gokarna Adhikari',\n            roll: '075 BEI 014'\n        },{\n            name: 'Kshitiz Dhakal',\n            roll: '075 BEI 015'\n        },{\n            name: 'Love Panta',\n            roll: '075 BEI 016'\n        }\n    ]\n    const names = members.map(\n        (i)=>{\n            return(\n                <tr>\n                    <td>{i.name}</td>\n                    <td>{i.roll}</td>\n                </tr>\n            )\n        }\n    )\n\n    const styleTable = useSpring({\n        loop: { reverse: true },\n        from: { \n            x:-200, \n            background: \"#46e891\",\n                },\n        to: { x:0 },\n        config: {duration: 5000},\n    })\n    const styleTopic = useSpring({\n        loop: { reverse: true },\n        from: { x:0, opacity: 0.5 },\n        to: { x:-200, opacity: 1 },\n        config: {duration: 5000},\n    })\n\n    return(\n        <div>\n            <animated.div style={{\n                ...styleTopic\n                }}>\n                <h1>DBMS Project, Restaurant Management System</h1>\n                <hr />\n                <h3 style={{textAlign:'left'}}>Completed By</h3>\n                <hr />\n            </animated.div>\n                    \n            <animated.div\n                style={{...styleTable}}\n            >\n                    <table className='table table-dark'>\n                        <thead className='bg-danger'>\n                            <tr>\n                                <th>Name</th>\n                                <th>Roll Number</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {names}\n                        </tbody>\n                    </table>\n            </animated.div>\n        </div>\n    )\n}\n\nexport default Information;","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/db.js",[],"/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Display.js",["128","129","130","131"],"/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Search.js",["132"],"import React, { useState } from 'react'\nimport { SearchKeys, columns, dataType } from './db'\nimport axios from 'axios'\nimport Display from './Display'\nimport Decorate from './Decorate'\nimport ComplexSearch from './ComplexSearch'\n\n/*\nprops needed:\n    table\n*/\n\nconst Search =(props)=> {\n    const [showDisplay, setShowDisplay] = useState(false)\n    const [gotData, setGotData] = useState([])\n    const [info, setinfo] = useState({\n        table: props.table,\n        key: Object.keys(SearchKeys[props.table])[0],\n        value: '',\n        keyType: 'text',\n        column: Object.keys(columns[props.table])[0],\n        sql: '',\n        api: \"'/api/show_data/'\",\n        searchKeys: Object.keys(SearchKeys[props.table])\n    })\n\n\n    const typeChange =(value)=>{\n        setShowDisplay(false)\n        setinfo({\n            ...info,  \n            key:value,\n            keyType: dataType[info.table][value + \" type\"],\n            column: SearchKeys[info.table][value],\n            sql: 'SELECT * FROM ' + info.table + ' WHERE ' + SearchKeys[info.table][value] + \" = '\" + info.value +\"'\"\n        });\n    }\n    const showMayBeItems=(e)=>{\n        e.preventDefault()\n        axios.post('/api/show_data/', info).then(res=>{\n                setGotData(res.data)\n            }).catch(err=>{\n                console.log(err)\n            })\n        setShowDisplay(true)\n\n    }\n    const valueChange =(value)=>{\n        setShowDisplay(false)\n        setinfo({\n            ...info, \n            value:value,\n            sql: 'SELECT * FROM ' + info.table + ' WHERE ' + info.column + \" = '\" + value +\"'\" \n        });\n        \n    }\n\n    const options = info.searchKeys.map(\n        (i)=>{\n            return(\n                <>\n                {\n                    (\n                        ()=>{\n                            if(i != 'sex'){\n                            return(\n                                <option value={i}>{i}</option>\n                            )\n                            }\n                        }\n                        \n                    )()\n                }\n                </>\n            )\n        }\n    )\n\n    return(\n        <div>\n        <h4>Simple Search</h4>\n        <hr />\n            <div className=\"form\">\n                <form style={{textAlign:'left', padding:'0% 70% 0% 3%'}}>\n                    <label className=\"form-check-label\">Search Using</label>\n                        <select className=\"form-control\" onChange={(e)=>{typeChange(e.target.value)}}>\n                            {options}\n                        </select>\n                    <label className=\"form-check-label\">Search key</label>\n                        <input className=\"form-control\" type={info.keyType} onChange={(e)=>{valueChange(e.target.value)}}/>\n                    <br />\n                    <input className=\"btn btn-outline-danger\" type=\"submit\" value=\"Search\" onClick={showMayBeItems}/>\n                </form>\n            </div>\n            {\n                (\n                    ()=>{\n                        if(showDisplay){\n                            return(\n                                <div>\n                                    <hr />\n                                    <Decorate style={{textAlign:'right'}} displayText={'>  SEARCH RESULT FROM PROVIDED REQUEST  <'} ></Decorate>\n                                    <hr />\n                                    <Display gotData={gotData} db2n={columns[info.table]}></Display>\n                                </div>\n                            )\n                        }\n                    }\n                )()\n            }\n            <ComplexSearch table={props.table} ></ComplexSearch>\n        </div>\n    )\n}\n\nexport default Search;","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Decorate.js",["133","134"],"import React from 'react'\nimport { animated, useSpring } from 'react-spring';\nimport { Button, Navbar, NavDropdown } from 'react-bootstrap';\n\n\nconst Decorate =(props)=>{\n    const styleSquare = useSpring({\n        loop: true,\n        from: { rotateZ: 0 },\n        to: { rotateZ: 180 },\n      })\n    const styleCircle1 = useSpring({\n        loop: { reverse: true },\n        from: { x: 0 },\n        to: { x: 430 },\n    })\n    const styleCircle2 = useSpring({\n        loop: { reverse: true },\n        from: { x: 0 },\n        to: { x: -430 },\n    })\n\n    return(\n        <div className=\"navbar navbar-expand bg-\">\n        \n            <animated.div\n                        style={{\n                            width: 50,\n                            height: 50,\n                            backgroundColor: '#ff0000',\n                            borderRadius: 10,\n                            ...styleSquare,\n                        }}\n                        />\n                    <animated.div\n                        style={{\n                            width: 30,\n                            height: 30,\n                            backgroundColor: '#46e891',\n                            borderRadius: 20,\n                            ...styleCircle1,\n                        }}\n                        />\n                    <Button variant='danger'>{props.displayText}</Button>\n                    <animated.div\n                        style={{\n                            width: 30,\n                            height: 30,\n                            backgroundColor: '#46e891',\n                            borderRadius: 20,\n                            ...styleCircle2,\n                        }}\n                        />\n                    <animated.div\n                        style={{\n                            width: 50,\n                            height: 50,\n                            backgroundColor: '#ff0000',\n                            borderRadius: 10,\n                            ...styleSquare,\n                        }}\n                        />\n        </div>\n    )\n}\n\nexport default Decorate;","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Create.js",["135"],"import React, { useState } from 'react'\nimport axios from 'axios'\nimport swal from 'sweetalert';\n\n\nimport { SearchKeys, dataType, dontIncludeInFrom } from './db';\nimport Information from './Information';\nimport '../css/create.css'\n\n\nconst Create =(props)=>{\n\n    const [custInformation, setCustInformation] = useState({})\n    const[cusTypes, setcusTypes] = useState(dataType[props.table])\n\n    const inputDetect=(value, key)=>{\n        if (cusTypes[key + \" select\"] && value==='--Select--'){\n            return;\n        }\n        const adder = {...custInformation}\n        key = SearchKeys[props.table][key]\n        adder[key] = value\n        setCustInformation(adder)\n    }\n\n    const fields = Object.keys(SearchKeys[props.table]).map(\n        (key)=>{\n            return(\n                <div className=\"i\">\n                {\n                    (\n                        ()=>{\n                            if(!dontIncludeInFrom[props.table].includes(key)){\n                                return(\n                                    <div>\n                                    <label>                    \n                        {key}\n                    </label>\n                        {\n                            (\n                                ()=>{\n                                    if (cusTypes[key + \" select\"]){\n                                        return(\n                                            <select className={cusTypes[key + \" class\"]}\n                                                id={cusTypes[key + \" id\"]}\n                                                type={cusTypes[key + \" type\"]} \n                                                onChange={(e)=>{inputDetect(e.target.value, key)}} \n                                            >\n                                                {cusTypes[key + \" select options\"]}\n                                            </select>\n                                        )\n                                    }else{\n                                            return(\n                                                <input  className={cusTypes[key + \" class\"]}\n                                                    required={cusTypes[key + \" required\"]}\n                                                    id={cusTypes[key + \" id\"]}\n                                                    type={cusTypes[key + \" type\"]} \n                                                    placeholder={key} \n                                                    onChange={(e)=>{inputDetect(e.target.value, key)}} \n                                                    />\n                                            )\n                                        }\n                                    }\n                            )()\n                        }\n                                    </div>\n                                )\n                            }\n                        }\n                    )()\n                }\n                </div>\n                )\n                \n        }\n    )\n\n    const addSQL=(adder)=>{\n        var sql = 'INSERT INTO ' + adder.table + \" (\"\n        for(var i in adder){\n            if ( i !== 'table')\n                sql += (i + \",\")\n        }\n        sql = sql.slice(0, -1)\n        sql += \") VALUES (\"\n        for(i in adder){\n            if ( i !== 'table')\n                sql += ( \"'\" + adder[i] + \"',\")\n        }\n        sql = sql.slice(0, -1)\n        sql += \")\"\n        adder.sql = sql\n        return adder;\n    }\n\n    const addCustomer =(e)=>{\n        e.preventDefault()\n        var adder = {...custInformation}\n        adder.table = [props.table]\n        adder = addSQL(adder);\n        console.log(adder)\n        axios.post('/api/add', adder).then(res=>{\n        }).catch(err=>{\n            console.log(err)\n        })\n        swal(\"DONE\", \"New Customer Recorded\", \"success\");\n        \n    }\n\n    return(\n        <div>\n            <hr />\n            <h2>Add a new customer</h2>\n            <hr />\n            <div className=\"aa\">\n                <form style={{textAlign:'left', padding:'0% 70% 0% 3%'}} onSubmit={addCustomer}>\n                    {fields}\n                    <br />\n                    <input className=\"btn btn-outline-danger\" type=\"submit\" value=\"ADD\"/>\n                </form>\n            </div>\n            <div className=\"inf\">\n                    <Information></Information>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default Create;","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/ComplexSearch.js",[],{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":17,"column":19,"nodeType":"142","messageId":"143","endLine":17,"endColumn":29},{"ruleId":"140","severity":1,"message":"144","line":1,"column":17,"nodeType":"142","messageId":"143","endLine":1,"endColumn":25},{"ruleId":"140","severity":1,"message":"145","line":4,"column":26,"nodeType":"142","messageId":"143","endLine":4,"endColumn":37},{"ruleId":"140","severity":1,"message":"146","line":10,"column":11,"nodeType":"142","messageId":"143","endLine":10,"endColumn":24},{"ruleId":"140","severity":1,"message":"147","line":26,"column":18,"nodeType":"142","messageId":"143","endLine":26,"endColumn":26},{"ruleId":"140","severity":1,"message":"146","line":10,"column":11,"nodeType":"142","messageId":"143","endLine":10,"endColumn":24},{"ruleId":"140","severity":1,"message":"147","line":26,"column":18,"nodeType":"142","messageId":"143","endLine":26,"endColumn":26},{"ruleId":"140","severity":1,"message":"144","line":1,"column":17,"nodeType":"142","messageId":"143","endLine":1,"endColumn":25},{"ruleId":"140","severity":1,"message":"144","line":1,"column":17,"nodeType":"142","messageId":"143","endLine":1,"endColumn":25},{"ruleId":"140","severity":1,"message":"144","line":1,"column":17,"nodeType":"142","messageId":"143","endLine":1,"endColumn":25},{"ruleId":"140","severity":1,"message":"148","line":2,"column":10,"nodeType":"142","messageId":"143","endLine":2,"endColumn":20},{"ruleId":"140","severity":1,"message":"149","line":2,"column":22,"nodeType":"142","messageId":"143","endLine":2,"endColumn":30},{"ruleId":"140","severity":1,"message":"150","line":2,"column":32,"nodeType":"142","messageId":"143","endLine":2,"endColumn":44},{"ruleId":"140","severity":1,"message":"151","line":2,"column":46,"nodeType":"142","messageId":"143","endLine":2,"endColumn":54},{"ruleId":"140","severity":1,"message":"152","line":3,"column":8,"nodeType":"142","messageId":"143","endLine":3,"endColumn":13},{"ruleId":"140","severity":1,"message":"153","line":2,"column":31,"nodeType":"142","messageId":"143","endLine":2,"endColumn":37},{"ruleId":"140","severity":1,"message":"154","line":1,"column":17,"nodeType":"142","messageId":"143","endLine":1,"endColumn":26},{"ruleId":"140","severity":1,"message":"144","line":1,"column":28,"nodeType":"142","messageId":"143","endLine":1,"endColumn":36},{"ruleId":"140","severity":1,"message":"155","line":2,"column":10,"nodeType":"142","messageId":"143","endLine":2,"endColumn":23},{"ruleId":"140","severity":1,"message":"156","line":2,"column":25,"nodeType":"142","messageId":"143","endLine":2,"endColumn":33},{"ruleId":"157","severity":1,"message":"158","line":65,"column":34,"nodeType":"159","messageId":"160","endLine":65,"endColumn":36},{"ruleId":"140","severity":1,"message":"161","line":3,"column":18,"nodeType":"142","messageId":"143","endLine":3,"endColumn":24},{"ruleId":"140","severity":1,"message":"145","line":3,"column":26,"nodeType":"142","messageId":"143","endLine":3,"endColumn":37},{"ruleId":"140","severity":1,"message":"162","line":14,"column":21,"nodeType":"142","messageId":"143","endLine":14,"endColumn":32},"no-native-reassign",["163"],"no-negated-in-lhs",["164"],"no-unused-vars","'setRouting' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'NavDropdown' is defined but never used.","'currentDomain' is assigned a value but never used.","'setNames' is assigned a value but never used.","'SearchKeys' is defined but never used.","'CusTypes' is defined but never used.","'custColNames' is defined but never used.","'custDB2N' is defined but never used.","'axios' is defined but never used.","'Spring' is defined but never used.","'useEffect' is defined but never used.","'useTransition' is defined but never used.","'animated' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Navbar' is defined but never used.","'setcusTypes' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]