[{"/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/index.js":"1","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/reportWebVitals.js":"2","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/App.js":"3","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/All.js":"4","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Example.js":"5","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/AlwaysRender.js":"6","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/nabs/Navbaar.js":"7","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/nabs/NavTopics.js":"8","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Customer/CustomerIndex.js":"9","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Status/StatusIndex.js":"10","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Order/OrderIndex.js":"11","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Customer/CCustomer.js":"12","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Customer/RCustomer.js":"13","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Customer/UCustomer.js":"14","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Customer/DCustomer.js":"15","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Order/DOrder.js":"16","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Order/COrder.js":"17","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Order/ROrder.js":"18","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Order/UOrder.js":"19","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Information.js":"20","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/db.js":"21","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Display.js":"22"},{"size":500,"mtime":1626243424727,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1626243424727,"results":"25","hashOfConfig":"24"},{"size":986,"mtime":1626329194346,"results":"26","hashOfConfig":"24"},{"size":239,"mtime":1626265752651,"results":"27","hashOfConfig":"24"},{"size":2077,"mtime":1626265658913,"results":"28","hashOfConfig":"24"},{"size":205,"mtime":1626323906315,"results":"29","hashOfConfig":"24"},{"size":2706,"mtime":1626328290710,"results":"30","hashOfConfig":"24"},{"size":715,"mtime":1626350563544,"results":"31","hashOfConfig":"24"},{"size":2606,"mtime":1626366534911,"results":"32","hashOfConfig":"24"},{"size":165,"mtime":1626324882010,"results":"33","hashOfConfig":"24"},{"size":2508,"mtime":1626333071802,"results":"34","hashOfConfig":"24"},{"size":3270,"mtime":1626427816506,"results":"35","hashOfConfig":"24"},{"size":168,"mtime":1626521970419,"results":"36","hashOfConfig":"24"},{"size":170,"mtime":1626325569617,"results":"37","hashOfConfig":"24"},{"size":2793,"mtime":1626521515636,"results":"38","hashOfConfig":"24"},{"size":161,"mtime":1626333126295,"results":"39","hashOfConfig":"24"},{"size":161,"mtime":1626333094502,"results":"40","hashOfConfig":"24"},{"size":159,"mtime":1626333126295,"results":"41","hashOfConfig":"24"},{"size":161,"mtime":1626333126295,"results":"42","hashOfConfig":"24"},{"size":2124,"mtime":1626366393293,"results":"43","hashOfConfig":"24"},{"size":2030,"mtime":1626440540374,"results":"44","hashOfConfig":"24"},{"size":2503,"mtime":1626521515636,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"34y20g",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"57"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/index.js",[],["100","101"],"/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/reportWebVitals.js",[],"/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/App.js",["102"],"import 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter, Route} from \"react-router-dom\";\nimport { useState } from 'react';\n\n// import Example from './js/Example';\n// import All from './js/All';\nimport AlwaysRender from './js/AlwaysRender'\nimport CustomerIndex from './js/Customer/CustomerIndex';\nimport StatusIndex from './js/Status/StatusIndex';\nimport OrderIndex from './js/Order/OrderIndex';\n\n\nfunction App() {\n\n  const CustomerDomain = \"/Customer\"\n\n  const [routing, setRouting] = useState([    // [path, component]\n    [CustomerDomain, CustomerIndex],\n    ['/Order', OrderIndex],\n    ['/Status', StatusIndex],\n])\n\n  const routeInfo = routing.map(\n    (i)=>{\n      return <Route path={i[0]} component={i[1]} exact></Route>\n    }\n  )\n\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <AlwaysRender></AlwaysRender>\n          {routeInfo}\n      </BrowserRouter>\n      {/* <All></All>\n      <Example></Example> */}\n    </div>\n  );\n}\n\nexport default App;\n","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/All.js",["103","104","105"],"import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\n\nconst All =()=>{\n\n    return(\n        <div>\n            <h1>Welcome to Restaurant Management system</h1>\n            \n        </div>\n    )\n}\n\nexport default All;",["106","107"],"/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Example.js",["108","109"],"import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\n\nconst Examples =()=>{\n\n    const [rows, setRows] = useState([])\n    const [show, setShow] = useState(false)\n    const [tableHeading, settableHeading] = useState([])\n    const [temp, setTemp] = useState(0)\n\n    useEffect(()=>{\n        axios.get('/api/customers/').then(res=>{\n            console.log(res.data);\n            setRows(res.data);\n        }).catch(err=>{\n            console.log(err)\n        })\n    }, [])\n\n    const getData =()=>{\n        setShow(true);\n        settableHeading(Object.keys(rows[0]))\n        console.log(rows[0].addressLine1)\n    }\n\n    const tableRows = tableHeading.map(\n        (head)=>{\n            return (\n                <th scope=\"col\">{head}</th>\n            )\n        }\n    )\n    \n    const rowRender2 =(n)=> tableHeading.map(\n        (head)=>{\n            return (\n            <td>\n                {rows[n][head]}\n            </td>\n            )\n        }\n    )\n    \n\n    const rowRender = [...rows.keys()].map(\n        (key)=>{\n            return (\n                <tr>\n                    {rowRender2(key)}\n                </tr>\n            )\n        }\n    )\n\n    return(\n        <div>\n            <button onClick={getData} >Get Data From NodeJS</button>\n            \n            {\n                (\n                    ()=>{\n                        if (show){\n                            return(\n                                <table className=\"table table-danger\">\n                                    <thead>\n                                        <tr>\n                                            {tableRows}\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {rowRender}\n                                    </tbody>\n                                </table>\n                            )\n                        }\n                    }\n                )()\n            }\n            \n        </div>\n    )\n}\n\nexport default Examples;","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/AlwaysRender.js",[],"/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/nabs/Navbaar.js",["110","111"],"import React, { useState } from 'react'\nimport { Link } from 'react-router-dom';\nimport { NavTopics } from './NavTopics';\nimport { Button, Navbar, NavDropdown } from 'react-bootstrap';\nimport { animated, useSpring } from 'react-spring';\n\n\nconst Navbaar = ()=>{ \n\n    const styleSquare = useSpring({\n        loop: true,\n        from: { rotateZ: 0 },\n        to: { rotateZ: 180 },\n      })\n    const styleCircle1 = useSpring({\n        loop: { reverse: true },\n        from: { x: 0 },\n        to: { x: 380 },\n    })\n    const styleCircle2 = useSpring({\n        loop: { reverse: true },\n        from: { x: 0 },\n        to: { x: -380 },\n    })\n\n    const navItems = NavTopics.map(\n        (i)=>{\n            return (\n                <Link className={i.class} to={i.path} style={{textDecoration:'none'}}>\n                    <Button variant={i.variant}>\n                       {i.label}\n                    </Button>\n                </Link>\n            )\n        }\n    )\n\n    return (\n        <div>\n            <Navbar expand=\"lg\" bg=\"dark\" fixed=\"top\" className=\"navbar navbar-expand bg-\">\n                    {navItems}\n                    <animated.div\n                        style={{\n                            width: 50,\n                            height: 50,\n                            backgroundColor: '#ff0000',\n                            borderRadius: 10,\n                            ...styleSquare,\n                        }}\n                        />\n                    <animated.div\n                        style={{\n                            width: 30,\n                            height: 30,\n                            backgroundColor: '#46e891',\n                            borderRadius: 20,\n                            ...styleCircle1,\n                        }}\n                        />\n                    <Button variant='danger'>Welcome to Restaurant Management System</Button>\n                    <animated.div\n                        style={{\n                            width: 30,\n                            height: 30,\n                            backgroundColor: '#46e891',\n                            borderRadius: 20,\n                            ...styleCircle2,\n                        }}\n                        />\n                    <animated.div\n                        style={{\n                            width: 50,\n                            height: 50,\n                            backgroundColor: '#ff0000',\n                            borderRadius: 10,\n                            ...styleSquare,\n                        }}\n                        />\n                </Navbar>\n                <hr />\n        </div>\n            ) \n    \n}\n\nexport default Navbaar;","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/nabs/NavTopics.js",[],"/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Customer/CustomerIndex.js",["112","113"],"import React, { useState } from 'react'\nimport CCustomer from './CCustomer';\nimport RCustomer from './RCustomer';\nimport UCustomer from './UCustomer';\nimport DCustomer from './DCustomer';\n\n\nconst CustomerIndex =()=>{\n\n    const currentDomain = '/Customer';\n    const [booleans, setBooleans] = useState({\n        C : false,\n        R : false,\n        U: false,\n        D: false\n    })\n\n    const setDisplay =(code)=>{\n        setBooleans({\n            C: code === 'C',\n            R: code === 'R',\n            U: code === 'U',\n            D: code === 'D'\n        })\n    }\n    const[names, setNames] = useState([\n        {\n            label: \"Add Customer\",\n            action: ()=>{setDisplay('C')}\n        },{\n            label: \"View Registered Customer\",\n            action: ()=>{setDisplay('R')}\n        },{\n            label: \"Update Customer Info\",\n            action: ()=>{setDisplay('U')}\n        },{\n            label: \"Delete Customer Info\",\n            action: ()=>{setDisplay('D')}\n        },\n    ])\n\n\n    const buttons = names.map(\n        (i)=>{\n            return (\n                <>\n                    <button className=\"btn btn-outline-danger\" onClick={i.action}>\n                        {i.label}\n                    </button> \n                </>\n            )\n        }\n    )\n\n\n\n    return(\n        <div style={{textAlign:'center'}} >\n            <h2 >Manage Customer information</h2>\n            <hr />\n                {buttons}\n                {\n                        (\n                            ()=>{\n                                if (booleans.C){\n                                    return(\n                                        <CCustomer></CCustomer>\n\n                                    )\n                                }\n                                else if (booleans.R){\n                                    return(\n                                            <RCustomer></RCustomer>\n                                    )\n                                }\n                                else if (booleans.U){\n                                    return(\n                                            <UCustomer></UCustomer>\n                                    )\n                                }\n                                else if (booleans.D){\n                                    return(\n                                            <DCustomer></DCustomer>\n                                    )\n                                }\n                            }\n                        )()\n                    }\n        </div>\n    )\n}\n\nexport default CustomerIndex;","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Status/StatusIndex.js",[],"/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Order/OrderIndex.js",["114","115"],"import React, { useState } from 'react'\nimport COrder from './COrder';\nimport ROrder from './ROrder';\nimport UOrder from './UOrder';\nimport DOrder from './DOrder.js';\n\n\nconst OrderIndex =()=>{\n\n    const currentDomain = '/Order';\n    const [booleans, setBooleans] = useState({\n        C : false,\n        R : false,\n        U: false,\n        D: false\n    })\n\n    const setDisplay =(code)=>{\n        setBooleans({\n            C: code === 'C',\n            R: code === 'R',\n            U: code === 'U',\n            D: code === 'D'\n        })\n    }\n    const[names, setNames] = useState([\n        {\n            label: \"Add Order\",\n            action: ()=>{setDisplay('C')}\n        },{\n            label: \"View Registered Order\",\n            action: ()=>{setDisplay('R')}\n        },{\n            label: \"Update Order\",\n            action: ()=>{setDisplay('U')}\n        },{\n            label: \"Delete Order\",\n            action: ()=>{setDisplay('D')}\n        },\n    ])\n\n\n    const buttons = names.map(\n        (i)=>{\n            return (\n                <>\n                    <button className=\"btn btn-outline-danger\" onClick={i.action}>\n                        {i.label}\n                    </button> \n                </>\n            )\n        }\n    )\n\n\n\n    return(\n        <div style={{textAlign:'center'}} >\n            <h2 >Manage Order information</h2>\n                {buttons}\n                {\n                        (\n                            ()=>{\n                                if (booleans.C){\n                                    return(\n                                        <COrder></COrder>\n\n                                    )\n                                }\n                                else if (booleans.R){\n                                    return(\n                                            <ROrder></ROrder>\n                                    )\n                                }\n                                else if (booleans.U){\n                                    return(\n                                            <UOrder></UOrder>\n                                    )\n                                }\n                                else if (booleans.D){\n                                    return(\n                                            <DOrder></DOrder>\n                                    )\n                                }\n                            }\n                        )()\n                    }\n        </div>\n    )\n}\n\nexport default OrderIndex;","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Customer/CCustomer.js",["116"],"import React, { useState } from 'react'\nimport axios from 'axios'\n\nimport { CusIn, CusTypes } from '../db';\nimport Information from '../Information';\nimport './Customer.css'\n\n\nconst CCustomer =()=>{\n\n\n    const [custInformation, setCustInformation] = useState(CusIn)\n    const[cusTypes, setcusTypes] = useState(CusTypes)\n\n    const inputDetect=(value, key)=>{\n        const adder = {...custInformation}\n        adder[key] = value\n        setCustInformation(adder)\n    }\n\n    const fields = Object.keys(custInformation).map(\n        (key)=>{\n            return(\n                <div className=\"i\">\n                    <label>                    \n                        {key}\n                    </label>\n                        {\n                            (\n                                ()=>{\n                                    if (cusTypes[key + \" select\"]){\n                                        return(\n                                            <select className={cusTypes[key + \" class\"]}\n                                                id={cusTypes[key + \" id\"]}\n                                                type={cusTypes[key + \" type\"]} \n                                                placeholder={key} \n                                                onChange={(e)=>{inputDetect(e.target.value, key)}} \n                                            >\n                                                {cusTypes[key + \" select options\"]}\n                                            </select>\n                                        )\n                                    }else{\n                                            return(\n                                                <input  className={cusTypes[key + \" class\"]}\n                                                    id={cusTypes[key + \" id\"]}\n                                                    type={cusTypes[key + \" type\"]} \n                                                    placeholder={key} \n                                                    onChange={(e)=>{inputDetect(e.target.value, key)}} \n                                                    />\n                                            )\n                                        }\n                                    }\n                            )()\n                        }\n                </div>\n                )\n                \n        }\n    )\n\n\n    const addCustomer =(e)=>{\n        e.preventDefault()\n        console.log(custInformation)\n        axios.post('/api/add_customer', custInformation).then(res=>{\n            console.log(res)\n        }).catch(err=>{\n            console.log(err)\n        })\n        console.log('sent')\n    }\n\n    return(\n        <div>\n            <hr />\n            <h2>Add a new customer</h2>\n            <hr />\n            <div className=\"form\">\n                <form style={{textAlign:'left', padding:'0% 70% 0% 3%'}}>\n                    {fields}\n                    <br />\n                    <input className=\"btn btn-outline-danger\" type=\"submit\" value=\"ADD\" onClick={addCustomer}/>\n                </form>\n            </div>\n            <div className=\"inf\">\n                    <Information></Information>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default CCustomer;","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Customer/RCustomer.js",[],"/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Customer/UCustomer.js",[],"/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Customer/DCustomer.js",["117","118"],"/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Order/DOrder.js",[],"/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Order/COrder.js",[],"/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Order/ROrder.js",[],"/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Order/UOrder.js",[],"/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Information.js",["119"],"import React from 'react'\nimport { animated, useSpring, Spring } from 'react-spring';\n\n// https://www.outlookindia.com/outlooktraveller/public/uploads/articles/explore/feature-platter.jpg\nconst Information =()=>{\n\n    const members = [\n        {\n            name: 'Abhay Nepal',\n            roll: '075 BEI 003'\n        },{\n            name: 'Gokarna Adhikari',\n            roll: '075 BEI 014'\n        },{\n            name: 'Kshitiz Dhakal',\n            roll: '075 BEI 015'\n        },{\n            name: 'Love Panta',\n            roll: '075 BEI 016'\n        }\n    ]\n    const names = members.map(\n        (i)=>{\n            return(\n                <tr>\n                    <td>{i.name}</td>\n                    <td>{i.roll}</td>\n                </tr>\n            )\n        }\n    )\n\n    const styleTable = useSpring({\n        loop: { reverse: true },\n        from: { \n            x:-200, \n            background: \"#46e891\",\n                },\n        to: { x:0 },\n        config: {duration: 5000},\n    })\n    const styleTopic = useSpring({\n        loop: { reverse: true },\n        from: { x:0, opacity: 0.5 },\n        to: { x:-200, opacity: 1 },\n        config: {duration: 5000},\n    })\n\n    return(\n        <div>\n            <animated.div style={{\n                ...styleTopic\n                }}>\n                <h1>DBMS Project, Restaurant Management System</h1>\n                <hr />\n                <h3 style={{textAlign:'left'}}>Completed By</h3>\n                <hr />\n            </animated.div>\n                    \n            <animated.div\n                style={{...styleTable}}\n            >\n                    <table className='table table-dark'>\n                        <thead className='bg-danger'>\n                            <tr>\n                                <th>Name</th>\n                                <th>Roll Number</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {names}\n                        </tbody>\n                    </table>\n            </animated.div>\n        </div>\n    )\n}\n\nexport default Information;","/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/db.js",[],"/home/gokarna/Desktop/IOE/5th sem/Database Management Systems/project/Main Project/restaurantms/src/js/Display.js",["120","121","122"],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":17,"column":19,"nodeType":"129","messageId":"130","endLine":17,"endColumn":29},{"ruleId":"127","severity":1,"message":"131","line":1,"column":17,"nodeType":"129","messageId":"130","endLine":1,"endColumn":26},{"ruleId":"127","severity":1,"message":"132","line":1,"column":28,"nodeType":"129","messageId":"130","endLine":1,"endColumn":36},{"ruleId":"127","severity":1,"message":"133","line":2,"column":8,"nodeType":"129","messageId":"130","endLine":2,"endColumn":13},{"ruleId":"123","replacedBy":"134"},{"ruleId":"125","replacedBy":"135"},{"ruleId":"127","severity":1,"message":"136","line":9,"column":12,"nodeType":"129","messageId":"130","endLine":9,"endColumn":16},{"ruleId":"127","severity":1,"message":"137","line":9,"column":18,"nodeType":"129","messageId":"130","endLine":9,"endColumn":25},{"ruleId":"127","severity":1,"message":"132","line":1,"column":17,"nodeType":"129","messageId":"130","endLine":1,"endColumn":25},{"ruleId":"127","severity":1,"message":"138","line":4,"column":26,"nodeType":"129","messageId":"130","endLine":4,"endColumn":37},{"ruleId":"127","severity":1,"message":"139","line":10,"column":11,"nodeType":"129","messageId":"130","endLine":10,"endColumn":24},{"ruleId":"127","severity":1,"message":"140","line":26,"column":18,"nodeType":"129","messageId":"130","endLine":26,"endColumn":26},{"ruleId":"127","severity":1,"message":"139","line":10,"column":11,"nodeType":"129","messageId":"130","endLine":10,"endColumn":24},{"ruleId":"127","severity":1,"message":"140","line":26,"column":18,"nodeType":"129","messageId":"130","endLine":26,"endColumn":26},{"ruleId":"127","severity":1,"message":"141","line":13,"column":21,"nodeType":"129","messageId":"130","endLine":13,"endColumn":32},{"ruleId":"127","severity":1,"message":"142","line":9,"column":12,"nodeType":"129","messageId":"130","endLine":9,"endColumn":16},{"ruleId":"127","severity":1,"message":"143","line":9,"column":18,"nodeType":"129","messageId":"130","endLine":9,"endColumn":25},{"ruleId":"127","severity":1,"message":"144","line":2,"column":31,"nodeType":"129","messageId":"130","endLine":2,"endColumn":37},{"ruleId":"127","severity":1,"message":"131","line":1,"column":17,"nodeType":"129","messageId":"130","endLine":1,"endColumn":26},{"ruleId":"127","severity":1,"message":"132","line":1,"column":28,"nodeType":"129","messageId":"130","endLine":1,"endColumn":36},{"ruleId":"127","severity":1,"message":"133","line":2,"column":8,"nodeType":"129","messageId":"130","endLine":2,"endColumn":13},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"no-unused-vars","'setRouting' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'axios' is defined but never used.",["145"],["146"],"'temp' is assigned a value but never used.","'setTemp' is assigned a value but never used.","'NavDropdown' is defined but never used.","'currentDomain' is assigned a value but never used.","'setNames' is assigned a value but never used.","'setcusTypes' is assigned a value but never used.","'rows' is assigned a value but never used.","'setRows' is assigned a value but never used.","'Spring' is defined but never used.","no-global-assign","no-unsafe-negation"]